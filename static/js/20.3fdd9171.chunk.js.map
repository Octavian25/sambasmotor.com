{"version":3,"sources":["pages/StockOpname/StockOpname/HeadStockOpname.jsx","pages/StockOpname/StockOpname/ModalStockOpname.jsx","pages/StockOpname/StockOpname/StockOpname.jsx","validasi/normalize.jsx","config/Helper.jsx"],"names":["HeadStockOpname","Component","constructor","props","super","this","state","columns","dataField","text","componentDidMount","dispatch","getGudang","getListStockOpname","change","localStorage","getItem","render","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","className","Field","name","component","ReanderField","type","label","placeholder","ReanderSelect","options","listgudang","map","list","value","kode_lokasi_gudang","nama_lokasi_gudang","onChange","setItem","onClick","showModal","disabled","tabel","keyField","data","liststockopname","textEmpty","onSend","Fragment","reduxForm","form","enableReinitialize","connect","datamaster","supervisor","ModalStockOpname","listSupplier","getBarcode","lokasi_hancur","AxiosMasterGet","concat","target","then","res","setBarang","console","log","kode_barang","nama_barang","merk_barang","kwalitas","satuan","setState","data_supplier","kode_supplier","stock","nama_supplier","setStock","hasil","split","onBlur","readOnly","validate","required","handleHead","onProgress","tanggal","lokasi","detail_barang","JSON","parse","AxiosMasterPost","NotifSucces","reset","removeItem","onFinish","catch","err","ToastError","response","handleModal","kode_barcode","qty","simpanLocal","react_router_dom","to","panel","StockOpname_HeadStockOpname","ModalGlobal","title","content","StockOpname_ModalStockOpname","__webpack_require__","d","__webpack_exports__","undefined","sweetalert2__WEBPACK_IMPORTED_MODULE_0__","sweetalert2__WEBPACK_IMPORTED_MODULE_0___default","n","nama","Promise","resolve","reject","array","push","stringify","Swal","fire","position","timer","icon","showConfirmButton"],"mappings":"iOAWA,MAAMA,UAAwBC,YAC5BC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CACXC,QAAS,CACP,CACEC,UAAW,eACXC,KAAM,gBAER,CACED,UAAW,gBACXC,KAAM,iBAER,CACED,UAAW,MACXC,KAAM,SAKdC,oBACEL,KAAKF,MAAMQ,SAASC,gBACpBP,KAAKF,MAAMQ,SAASE,eACpBR,KAAKF,MAAMW,OACT,SACAC,aAAaC,QAAQ,wBAA0B,IAGnDC,SACE,OACEC,EAAAC,EAAAC,cAAA,QACEC,SAAUhB,KAAKF,MAAMmB,aACrBC,WAAaC,IACD,UAAVA,EAAEC,KAAmBD,EAAEE,mBAGzBR,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,UACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,UACNC,YAAY,qBAGhBhB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,SACLC,UAAWK,IACXC,QAAS/B,KAAKF,MAAMkC,WAAWC,IAAKC,IAKlC,MAJW,CACTC,MAAOD,EAAKE,mBACZZ,KAAMU,EAAKG,sBAIfV,KAAK,OACLC,MAAM,SACNC,YAAY,iBACZS,SAAWnB,GAAMT,aAAa6B,QAAQ,sBAAuBpB,MAGjEN,EAAAC,EAAAC,cAAA,OAAKO,UAAU,kBACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,cACbT,EAAAC,EAAAC,cAAA,UACEY,KAAK,SACLL,UAAU,kBACVkB,QAAS,IAAMxC,KAAKF,MAAMQ,SAASmC,gBACnCC,UACEhC,aAAaC,QAAQ,wBALzB,eAQcE,EAAAC,EAAAC,cAAA,KAAGO,UAAU,uBAI/BT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CACEC,SAAS,eACTC,KAAM7C,KAAKF,MAAMgD,iBAAmB,GACpC5C,QAASF,KAAKC,MAAMC,QACpB6C,UAAU,sDAGdlC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,kBACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,cACbT,EAAAC,EAAAC,cAAA,UAAQO,UAAU,kBAAkBoB,SAAU1C,KAAKF,MAAMkD,QACtDhD,KAAKF,MAAMkD,OACVnC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,KACEpC,EAAAC,EAAAC,cAAA,KAAGO,UAAU,2BADf,0BAKAT,EAAAC,EAAAC,cAAAF,EAAAC,EAAAmC,SAAA,eACSpC,EAAAC,EAAAC,cAAA,KAAGO,UAAU,mCAYxC3B,EAAkBuD,YAAU,CAC1BC,KAAM,kBACNC,oBAAoB,GAFJF,CAGfvD,GACY0D,kBAASpD,IACf,CACL+B,WAAY/B,EAAMqD,WAAWtB,WAC7Bc,gBAAiB7C,EAAMsD,WAAWT,gBAClCE,OAAQ/C,EAAMqD,WAAWN,SAJdK,CAMZ1D,YCvHH,MAAM6D,UAAyB5D,YAC7BC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CACXwD,aAAc,IAGlBC,WAAWvC,GACT,IAAIwC,EAAgBjD,aAAaC,QAAQ,kBAAoB,GAC7DiD,YACE,8CAAAC,OACK1C,EAAE2C,OAAO3B,MADd,KAAA0B,OACuBF,IACvBI,KAAMC,GAAQhE,KAAKiE,UAAUD,EAAInB,OAErCoB,UAAUD,GACRE,QAAQC,IAAIH,GACZhE,KAAKF,MAAMW,OAAO,cAAeuD,EAAI,GAAGI,aACxCpE,KAAKF,MAAMW,OAAO,cAAeuD,EAAI,GAAGK,aACxCrE,KAAKF,MAAMW,OAAO,OAAQuD,EAAI,GAAGM,aACjCtE,KAAKF,MAAMW,OAAO,WAAYuD,EAAI,GAAGO,UACrCvE,KAAKF,MAAMW,OAAO,SAAUuD,EAAI,GAAGQ,QACnCxE,KAAKyE,SAAS,CACZhB,aACEO,GACAA,EAAI,GAAGU,cAAczC,IAAKC,IAKxB,MAJW,CACTC,MAAK,GAAA0B,OAAK3B,EAAKyC,cAAV,MAAAd,OAA4B3B,EAAK0C,OACtCpD,KAAMU,EAAK2C,mBAMrBC,SAASC,GACP,IAAIlC,EAAOkC,EAAMC,MAAM,MACvBhF,KAAKF,MAAMW,OAAO,gBAAiBoC,EAAK,IACxC7C,KAAKF,MAAMW,OAAO,QAASoC,EAAK,IAElCjC,SACE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QACEC,SAAUhB,KAAKF,MAAMmB,aACrBC,WAAaC,IACD,UAAVA,EAAEC,KAAmBD,EAAEE,mBAGzBR,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,eACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,eACNC,YAAY,uBACZS,SAAWnB,GAAMnB,KAAK0D,WAAWvC,GACjC8D,OAAS9D,GAAMnB,KAAK0D,WAAWvC,MAGnCN,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,cACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,cACNC,YAAY,sBACZqD,UAAQ,KAGZrE,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,cACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,cACNC,YAAY,sBACZqD,UAAQ,KAGZrE,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,OACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,OACNC,YAAY,eACZqD,UAAQ,KAGZrE,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,WACLC,UAAWC,IACXE,MAAM,WACNC,YAAY,mBACZqD,UAAQ,KAGZrE,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,SACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,SACNC,YAAY,iBACZqD,UAAQ,KAGZrE,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,iBACLC,UAAWK,IACXC,QAAS/B,KAAKC,MAAMwD,aACpB9B,KAAK,OACLC,MAAM,gBACNC,YAAY,wBACZS,SAAWnB,GAAMnB,KAAK8E,SAAS3D,MAGnCN,EAAAC,EAAAC,cAAA,OAAKO,UAAU,mBACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,gBACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,gBACNC,YAAY,2BAGhBhB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,QACLC,UAAWC,IACXC,KAAK,SACLC,MAAM,QACNC,YAAY,gBACZqD,UAAQ,KAGZrE,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,KAAK,MACLC,UAAWC,IACXC,KAAK,SACLC,MAAM,MACNC,YAAY,cACZsD,SAAUC,SAKlBvE,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAA,OAAKO,UAAU,cACbT,EAAAC,EAAAC,cAAA,UAAQO,UAAU,mBAAlB,UACST,EAAAC,EAAAC,cAAA,KAAGO,UAAU,4BAcrBkC,MAJfA,EAAmBN,YAAU,CAC3BC,KAAM,mBACNC,oBAAoB,GAFHF,CAGhBM,GC1FYH,wBArEf,cAA0BzD,YACxBC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,GAGfI,qBACAgF,WAAWN,GACT/E,KAAKF,MAAMQ,SAASgF,gBACpB,IAAIzC,EAAO,CACT0C,QAASR,EAAMQ,QACfnD,mBAAoB2C,EAAMS,OAC1BC,cAAeC,KAAKC,MAAMjF,aAAaC,QAAQ,sBAAwB,IAEzEiF,YAAgB,8BAA+B/C,GAC5CkB,KAAK,IAAM8B,YAAY,yBACvB9B,KAAK,IAAM/D,KAAKF,MAAMQ,SAASwF,YAAM,qBACrC/B,KAAK,IAAMrD,aAAaqF,WAAW,qBACnChC,KAAK,IAAMrD,aAAaqF,WAAW,wBACnChC,KAAK,IAAM/D,KAAKF,MAAMQ,SAASE,gBAC/BuD,KAAK,IAAM/D,KAAKF,MAAMQ,SAAS0F,iBAC/BC,MAAOC,GACNC,YAAU,+BAAAtC,OACuBqC,EAAIE,SAASvD,OAC5CkB,KAAK,IAAM/D,KAAKF,MAAMQ,SAAS0F,kBAGvCK,YAAYtB,GACV,IAAIlC,EAAO,CACT8B,cAAeI,EAAMJ,cACrB2B,aAAcvB,EAAMuB,aACpBC,IAAKxB,EAAMwB,KAEbC,YAAY,mBAAoB3D,GAChC7C,KAAKF,MAAMQ,SAASE,eACpBR,KAAKF,MAAMQ,SAASwF,YAAM,qBAE5BlF,SACE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIO,UAAU,6BACZT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,mBACZT,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CAAMC,GAAG,KAAT,iBAEF7F,EAAAC,EAAAC,cAAA,MAAIO,UAAU,0BAAd,wBAEFT,EAAAC,EAAAC,cAAA,MAAIO,UAAU,eAAd,wBACAT,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,KACE9F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,4BACA9F,EAAAC,EAAAC,cAAC4F,EAAA,EAAD,KACE9F,EAAAC,EAAAC,cAAA,OAAKO,UAAU,aACbT,EAAAC,EAAAC,cAAC6F,EAAD,CACE5F,SAAW6B,GAAS7C,KAAKqF,WAAWxC,GACpCC,gBAAiB9C,KAAKF,MAAMgD,qBAKpCjC,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CACEC,MAAM,qBACNC,QACElG,EAAAC,EAAAC,cAACiG,EAAD,CAAkBhG,SAAW6B,GAAS7C,KAAKqG,YAAYxD,6CC9EnEoE,EAAAC,EAAAC,EAAA,sBAAA/B,IAAO,MAoBMA,EAAYjD,GAAWA,OAAQiF,EAAY,uDCpBxDH,EAAAC,EAAAC,EAAA,sBAAAX,IAAA,IAAAa,EAAAJ,EAAA,IAAAK,EAAAL,EAAAM,EAAAF,GAEO,MAAMb,EAAc,CAACgB,EAAM3E,IACzB,IAAI4E,QAAQ,CAACC,EAASC,KAC3B,IAAIC,EAAQlC,KAAKC,MAAMjF,aAAaC,QAAQ6G,KAAU,GACtDI,EAAMC,KAAKhF,GACXnC,aAAa6B,QAAQiF,EAAM9B,KAAKoC,UAAUF,IAC1CG,IAAKC,KAAK,CACRC,SAAU,YACV7H,KAAM,uBACN8H,MAAO,IACPC,KAAM,UACNC,mBAAmB,IAElBrE,KAAK,IAAM2D,EAAQ,aACnBzB,MAAM,IAAM0B,EAAO","file":"static/js/20.3fdd9171.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getGudang, showModal } from \"../../../actions/datamaster_action\";\r\nimport { getListStockOpname } from \"../../../actions/supervisor_action\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../components/notification/notification\";\r\nimport Tabel from \"../../../components/Tabel/tabel\";\r\n\r\nclass HeadStockOpname extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        {\r\n          dataField: \"kode_barcode\",\r\n          text: \"Kode Barcode\",\r\n        },\r\n        {\r\n          dataField: \"kode_supplier\",\r\n          text: \"Kode Supplier\",\r\n        },\r\n        {\r\n          dataField: \"qty\",\r\n          text: \"Qty\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getGudang());\r\n    this.props.dispatch(getListStockOpname());\r\n    this.props.change(\r\n      \"lokasi\",\r\n      localStorage.getItem(\"lokasi_stock_opname\") || \"\"\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"tanggal\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Tanggal\"\r\n              placeholder=\"Masukan Tanggal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"lokasi\"\r\n              component={ReanderSelect}\r\n              options={this.props.listgudang.map((list) => {\r\n                let data = {\r\n                  value: list.kode_lokasi_gudang,\r\n                  name: list.nama_lokasi_gudang,\r\n                };\r\n                return data;\r\n              })}\r\n              type=\"text\"\r\n              label=\"Lokasi\"\r\n              placeholder=\"Masukan Lokasi\"\r\n              onChange={(e) => localStorage.setItem(\"lokasi_stock_opname\", e)}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 mb-3\">\r\n            <div className=\"text-right\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-warning\"\r\n                onClick={() => this.props.dispatch(showModal())}\r\n                disabled={\r\n                  localStorage.getItem(\"lokasi_stock_opname\") ? false : true\r\n                }\r\n              >\r\n                Tambah Data <i className=\"fa fa-plus ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <Tabel\r\n              keyField=\"kode_barcode\"\r\n              data={this.props.liststockopname || []}\r\n              columns={this.state.columns}\r\n              textEmpty=\"Silahkan pilih Lokasi, Setelah itu tambah barang\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12 mb-3\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" disabled={this.props.onSend}>\r\n                {this.props.onSend ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Menyimpan\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    Simpan <i className=\"fa fa-paper-plane ml-3 \"></i>\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadStockOpname = reduxForm({\r\n  form: \"HeadStockOpname\",\r\n  enableReinitialize: true,\r\n})(HeadStockOpname);\r\nexport default connect((state) => {\r\n  return {\r\n    listgudang: state.datamaster.listgudang,\r\n    liststockopname: state.supervisor.liststockopname,\r\n    onSend: state.datamaster.onSend,\r\n  };\r\n})(HeadStockOpname);\r\n","import React, { Component } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { AxiosMasterGet } from \"../../../axios\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../components/notification/notification\";\r\nimport { required } from \"../../../validasi/normalize\";\r\n\r\nclass ModalStockOpname extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n    };\r\n  }\r\n  getBarcode(e) {\r\n    let lokasi_hancur = localStorage.getItem(\"lokasi_hancur\") || \"\";\r\n    AxiosMasterGet(\r\n      \"hancur-barang/get/BarangByBarcodeLokasi/\" +\r\n        `${e.target.value}&${lokasi_hancur}`\r\n    ).then((res) => this.setBarang(res.data));\r\n  }\r\n  setBarang(res) {\r\n    console.log(res);\r\n    this.props.change(\"kode_barang\", res[0].kode_barang);\r\n    this.props.change(\"nama_barang\", res[0].nama_barang);\r\n    this.props.change(\"merk\", res[0].merk_barang);\r\n    this.props.change(\"kwalitas\", res[0].kwalitas);\r\n    this.props.change(\"satuan\", res[0].satuan);\r\n    this.setState({\r\n      listSupplier:\r\n        res &&\r\n        res[0].data_supplier.map((list) => {\r\n          let data = {\r\n            value: `${list.kode_supplier}||${list.stock}`,\r\n            name: list.nama_supplier,\r\n          };\r\n          return data;\r\n        }),\r\n    });\r\n  }\r\n  setStock(hasil) {\r\n    let data = hasil.split(\"||\");\r\n    this.props.change(\"kode_supplier\", data[0]);\r\n    this.props.change(\"stock\", data[1]);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={this.props.handleSubmit}\r\n          onKeyPress={(e) => {\r\n            e.key === \"Enter\" && e.preventDefault();\r\n          }}\r\n        >\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kode_barcode\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"Kode Barcode\"\r\n                  placeholder=\"Masukan Kode Barcode\"\r\n                  onChange={(e) => this.getBarcode(e)}\r\n                  onBlur={(e) => this.getBarcode(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3 d-none\">\r\n                <Field\r\n                  name=\"kode_barang\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"Nama Barang\"\r\n                  placeholder=\"Masukan Nama Barang\"\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"nama_barang\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"Nama Barang\"\r\n                  placeholder=\"Masukan Nama Barang\"\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"merk\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"Merk\"\r\n                  placeholder=\"Masukan Merk\"\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kwalitas\"\r\n                  component={ReanderField}\r\n                  label=\"Kualitas\"\r\n                  placeholder=\"Masukan Kualitas\"\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"satuan\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"Satuan\"\r\n                  placeholder=\"Masukan Satuan\"\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kode_supplier1\"\r\n                  component={ReanderSelect}\r\n                  options={this.state.listSupplier}\r\n                  type=\"text\"\r\n                  label=\"Kode Supplier\"\r\n                  placeholder=\"Masukan Kode Supplier\"\r\n                  onChange={(e) => this.setStock(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3 d-none\">\r\n                <Field\r\n                  name=\"kode_supplier\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"Kode Supplier\"\r\n                  placeholder=\"Masukan Kode Supplier\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <Field\r\n                  name=\"stock\"\r\n                  component={ReanderField}\r\n                  type=\"number\"\r\n                  label=\"Stock\"\r\n                  placeholder=\"Masukan Stock\"\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <Field\r\n                  name=\"qty\"\r\n                  component={ReanderField}\r\n                  type=\"number\"\r\n                  label=\"Qty\"\r\n                  placeholder=\"Masukan Qty\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\">\r\n                Simpan <i className=\"fa fa-paper-plane\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModalStockOpname = reduxForm({\r\n  form: \"ModalStockOpname\",\r\n  enableReinitialize: true,\r\n})(ModalStockOpname);\r\nexport default ModalStockOpname;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { reset } from \"redux-form\";\r\nimport { onFinish, onProgress } from \"../../../actions/datamaster_action\";\r\nimport { getListStockOpname } from \"../../../actions/supervisor_action\";\r\nimport { AxiosMasterPost } from \"../../../axios\";\r\nimport {\r\n  NotifSucces,\r\n  ToastError,\r\n} from \"../../../components/notification/notification\";\r\nimport { Panel, PanelBody, PanelHeader } from \"../../../components/panel/panel\";\r\nimport { simpanLocal } from \"../../../config/Helper\";\r\nimport ModalGlobal from \"../../ModalGlobal\";\r\nimport HeadStockOpname from \"./HeadStockOpname\";\r\nimport ModalStockOpname from \"./ModalStockOpname\";\r\n\r\nclass StockOpname extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {}\r\n  handleHead(hasil) {\r\n    this.props.dispatch(onProgress());\r\n    let data = {\r\n      tanggal: hasil.tanggal,\r\n      kode_lokasi_gudang: hasil.lokasi,\r\n      detail_barang: JSON.parse(localStorage.getItem(\"StockOpname_temp\")) || [],\r\n    };\r\n    AxiosMasterPost(\"stock-opname/post-transaksi\", data)\r\n      .then(() => NotifSucces(\"Stockopname Berhasil\"))\r\n      .then(() => this.props.dispatch(reset(\"HeadStockOpname\")))\r\n      .then(() => localStorage.removeItem(\"StockOpname_temp\"))\r\n      .then(() => localStorage.removeItem(\"lokasi_stock_opname\"))\r\n      .then(() => this.props.dispatch(getListStockOpname()))\r\n      .then(() => this.props.dispatch(onFinish()))\r\n      .catch((err) =>\r\n        ToastError(\r\n          `Gagal StockOpname , Error : ${err.response.data}`\r\n        ).then(() => this.props.dispatch(onFinish()))\r\n      );\r\n  }\r\n  handleModal(hasil) {\r\n    let data = {\r\n      kode_supplier: hasil.kode_supplier,\r\n      kode_barcode: hasil.kode_barcode,\r\n      qty: hasil.qty,\r\n    };\r\n    simpanLocal(\"StockOpname_temp\", data);\r\n    this.props.dispatch(getListStockOpname());\r\n    this.props.dispatch(reset(\"ModalStockOpname\"));\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Stock Opname</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Stock Opname Barang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Stock Opname Barang </h1>\r\n        <Panel>\r\n          <PanelHeader>Stock Opname Barang</PanelHeader>\r\n          <PanelBody>\r\n            <div className=\"col-lg-12\">\r\n              <HeadStockOpname\r\n                onSubmit={(data) => this.handleHead(data)}\r\n                liststockopname={this.props.liststockopname}\r\n              />\r\n            </div>\r\n          </PanelBody>\r\n        </Panel>\r\n        <ModalGlobal\r\n          title=\"Tambah Data Barang\"\r\n          content={\r\n            <ModalStockOpname onSubmit={(data) => this.handleModal(data)} />\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(StockOpname);\r\n","export const Gramasi = (value, previousValue) => {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  const onlyNums = value.replace(/[^0-9.]+/g, \"\");\r\n  if (!previousValue || value.length > previousValue.length) {\r\n    return onlyNums;\r\n  }\r\n};\r\n\r\nexport const NumberOnly = (value, previousValue) => {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  const onlyNums = value.replace(/[^0-9]+/g, \"\");\r\n  if (!previousValue || value.length > previousValue.length) {\r\n    return onlyNums;\r\n  }\r\n};\r\n\r\nexport const required = (value) => (value ? undefined : \"Tidak Boleh Kosong\");\r\nexport const number = (value) =>\r\n  value && isNaN(Number(value)) ? \"Must be a number\" : undefined;\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const simpanLocal = (nama, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    let array = JSON.parse(localStorage.getItem(nama)) || [];\r\n    array.push(data);\r\n    localStorage.setItem(nama, JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      text: \"Tambah Data Berhasil\",\r\n      timer: 2000,\r\n      icon: \"success\",\r\n      showConfirmButton: false,\r\n    })\r\n      .then(() => resolve(\"Berhaisl\"))\r\n      .catch(() => reject(\"GAGAL\"));\r\n  });\r\n};\r\n"],"sourceRoot":""}