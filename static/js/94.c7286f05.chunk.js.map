{"version":3,"sources":["pages/Laporan/LaporanPenjualan/Service/CetakService.jsx","pages/Laporan/LaporanPenjualan/Service/HeadLaporanService.jsx","pages/Laporan/LaporanPenjualan/Service/LaporanService.jsx"],"names":["CetakService","row1isi","row2isi","data","doc","jsPDF","setFontSize","text","concat","tableRows","sub_total","forEach","barang","index","rows","tanggal","no_faktur","jenis_service","parseFloat","total","toLocaleString","push","console","log","autoTable","head","content","body","startY","theme","rowPageBreak","pageBreak","margin","top","bodyStyles","lineWidth","lineColor","headStyles","fillColor","embed","output","x","window","open","document","write","close","HeadLaporanService","Component","constructor","props","super","this","state","componentDidMount","dispatch","getKategoriService","render","listkategoriservice","value","name","react_default","a","createElement","onSubmit","handleSubmit","className","Field","component","ReanderField","type","label","placeholder","ReanderSelect","options","map","list","reduxForm","form","enableReinitialize","connect","datamaster","LaporanService","getLaporan","hasil","AxiosMasterGet","tanggal_awal","tanggal_akhir","kode_jenis","then","res","setState","listLaporan","react_router_dom","to","panel","Service_HeadLaporanService"],"mappings":"4JAwFeA,MAnFM,CACnBC,EAAU,GACVC,EAAU,GAEVC,KAGA,MAAMC,EAAM,IAAIC,UAEhBD,EAAIE,YAAY,IAChBF,EAAIG,KAAK,kBAAmB,GAAI,IAChCH,EAAIE,YAAY,IAEhBF,EAAIG,KAAJ,aAAAC,OAAsBP,GAAW,GAAI,IAIrC,IAAIQ,EAAY,GACZC,EAAY,EAkBhBP,EAAKQ,QAAQ,CAACC,EAAQC,KACpB,IAAIC,EAAO,CACTF,EAAOG,QACPH,EAAOI,UACPJ,EAAOK,cACPC,WAAWN,EAAOO,OAAOC,eAAe,UAE1CV,GAAwBQ,WAAWN,EAAOO,OAC1CV,EAAUY,KAAKP,GACfQ,QAAQC,IAAId,GAEZC,EAAY,IAEdN,EAAIoB,UAAU,CACZC,KA/BgB,CAChB,CACE,CACEC,QAAO,WAGT,CACEA,QAAO,gBAET,CACEA,QAAO,cAET,CACEA,QAAO,WAmBXC,KAAMlB,EACNmB,OAAQ,GACRC,MAAO,QACPC,aAAc,QACdC,UAAW,QACXC,OAAQ,CAAEC,IAAK,IACfC,WAAY,CAAEC,UAAW,IAAMC,UAAW,QAC1CC,WAAY,CACVF,UAAW,IACXC,UAAW,OACXE,UAAW,CAAC,IAAK,IAAK,QAc1B,IACIC,EAAQ,0CADCnC,EAAIoC,OAAO,iBACyC,MAC7DC,EAAIC,OAAOC,OACfF,EAAEG,SAASD,OACXF,EAAEG,SAASC,MAAMN,GACjBE,EAAEG,SAASE,kDC5Eb,MAAMC,UAA2BC,YAC/BC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,GAEfC,oBACEF,KAAKF,MAAMK,SAASC,gBAEtBC,SAEE,OADAL,KAAKF,MAAMQ,oBAAoBrC,KAAK,CAAEsC,MAAO,QAASC,KAAM,UAE1DC,EAAAC,EAAAC,cAAA,QAAMC,SAAUZ,KAAKF,MAAMe,cACzBJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEP,KAAK,eACLQ,UAAWC,IACXC,KAAK,OACLC,MAAM,eACNC,YAAY,0BAGhBX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEP,KAAK,gBACLQ,UAAWC,IACXC,KAAK,OACLC,MAAM,iBACNC,YAAY,4BAGhBX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACbL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEP,KAAK,aACLQ,UAAWK,IACXC,QAAStB,KAAKF,MAAMQ,oBAAoBiB,IAAKC,IAK3C,MAJW,CACTjB,MAAOiB,EAAK3D,cACZ2C,KAAMgB,EAAK3D,iBAIfqD,KAAK,OACLC,MAAM,QACNC,YAAY,mBAGhBX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,mBAAlB,cACaL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,2BAUxCnB,EAAqB8B,YAAU,CAC7BC,KAAM,qBACNC,oBAAoB,GAFDF,CAGlB9B,GACYiC,kBAAS3B,IACf,CACLK,oBAAqBL,EAAM4B,WAAWvB,sBAF3BsB,CAIZjC,GCrBYmC,UA7Cf,cAA6BlC,YAC3BC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,GAEf8B,WAAWC,GACTC,YAAc,+BAAA7E,OACmB4E,EAAME,aADzB,KAAA9E,OAEV4E,EAAMG,cAFI,KAAA/E,OAGR4E,EAAMI,YAAc,UAEvBC,KAAMC,GACLtC,KAAKuC,SAAS,CACZC,YAAaF,GAAOA,EAAIvF,QAG3BsF,KAAK,IACJzF,EACEoF,EAAME,aACNF,EAAMI,WACNpC,KAAKC,MAAMuC,cAInBnC,SACE,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIG,UAAU,6BACZL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,mBACZL,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAMC,GAAG,KAAT,YAEFjC,EAAAC,EAAAC,cAAA,MAAIG,UAAU,0BAAd,4BAEFL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,eAAd,4BACAL,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,gCACAlC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAACiC,EAAD,CAAoBhC,SAAW7D,GAASiD,KAAK+B,WAAWhF","file":"static/js/94.c7286f05.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakService = (\r\n  row1isi = \"\",\r\n  row2isi = \"\",\r\n\r\n  data\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN SERVICE\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`TANGGAL : ${row1isi}`, 14, 25);\r\n  //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n\r\n  let tableRows = [];\r\n  let sub_total = 0;\r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `TANGGAL`,\r\n      },\r\n\r\n      {\r\n        content: `NOMOR FAKTUR`,\r\n      },\r\n      {\r\n        content: `KETERANGAN`,\r\n      },\r\n      {\r\n        content: `TOTAL`,\r\n      },\r\n    ],\r\n  ];\r\n  data.forEach((barang, index) => {\r\n    let rows = [\r\n      barang.tanggal,\r\n      barang.no_faktur,\r\n      barang.jenis_service,\r\n      parseFloat(barang.total).toLocaleString(\"id-ID\"),\r\n    ];\r\n    sub_total = sub_total + parseFloat(barang.total);\r\n    tableRows.push(rows);\r\n    console.log(tableRows);\r\n\r\n    sub_total = 0;\r\n  });\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    startY: 35,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [187, 187, 187],\r\n    },\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  // doc.text(`User\t: ${username}`, 14, finalY + 10);\r\n  // doc.text(`Cetak\t: ${tanggal}`, 14, finalY + 16);\r\n  // doc.text(`Valid\t: ${validby}`, 14, finalY + 22);\r\n\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default CetakService;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getKategoriService } from \"../../../../actions/datamaster_action\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../../components/notification/notification\";\r\n\r\nclass HeadLaporanService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getKategoriService());\r\n  }\r\n  render() {\r\n    this.props.listkategoriservice.push({ value: \"SEMUA\", name: \"SEMUA\" });\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"tanggal_awal\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Dari Tanggal\"\r\n              placeholder=\"Masukan Tanggal Awal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"tanggal_akhir\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Sampai Tanggal\"\r\n              placeholder=\"Masukan Sampai Tanggal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"kode_jenis\"\r\n              component={ReanderSelect}\r\n              options={this.props.listkategoriservice.map((list) => {\r\n                let data = {\r\n                  value: list.jenis_service,\r\n                  name: list.jenis_service,\r\n                };\r\n                return data;\r\n              })}\r\n              type=\"text\"\r\n              label=\"Jenis\"\r\n              placeholder=\"Masukan Jenis\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\">\r\n                Lihat Data <i className=\"fa fa-print ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanService = reduxForm({\r\n  form: \"HeadLaporanService\",\r\n  enableReinitialize: true,\r\n})(HeadLaporanService);\r\nexport default connect((state) => {\r\n  return {\r\n    listkategoriservice: state.datamaster.listkategoriservice,\r\n  };\r\n})(HeadLaporanService);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AxiosMasterGet } from \"../../../../axios\";\r\nimport {\r\n  Panel,\r\n  PanelBody,\r\n  PanelHeader,\r\n} from \"../../../../components/panel/panel\";\r\nimport CetakService from \"./CetakService\";\r\nimport HeadLaporanService from \"./HeadLaporanService\";\r\n\r\nclass LaporanService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  getLaporan(hasil) {\r\n    AxiosMasterGet(\r\n      `laporan/service/lap-service/${hasil.tanggal_awal}&${\r\n        hasil.tanggal_akhir\r\n      }&${hasil.kode_jenis || \"SEMUA\"}`\r\n    )\r\n      .then((res) =>\r\n        this.setState({\r\n          listLaporan: res && res.data,\r\n        })\r\n      )\r\n      .then(() =>\r\n        CetakService(\r\n          hasil.tanggal_awal,\r\n          hasil.kode_jenis,\r\n          this.state.listLaporan\r\n        )\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Penjualan Sales</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Penjualan Sales </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Penjualan Sales</PanelHeader>\r\n          <PanelBody>\r\n            <HeadLaporanService onSubmit={(data) => this.getLaporan(data)} />\r\n          </PanelBody>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaporanService;\r\n"],"sourceRoot":""}