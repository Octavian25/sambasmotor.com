{"version":3,"sources":["pages/Laporan/LaporanSupplier/PenerimaanSupplier/CetakPenerimaanSupplier.jsx","pages/Laporan/LaporanSupplier/PenerimaanSupplier/CetakPenerimaanSupplierRekap.jsx","pages/Laporan/LaporanSupplier/PenerimaanSupplier/HeadLaporanPenerimaanSupplier.jsx","pages/Laporan/LaporanSupplier/PenerimaanSupplier/LaporanPenerimaanSupplier.jsx"],"names":["CetakPenerimaanSupplier","row1isi","row2isi","username","tanggal","validby","data","doc","jsPDF","tableRows","footRows","finalY","sub_total","sub_qty","setFontSize","text","concat","forEach","item","index","tableColumn","content","no_terima","colSpan","no_bon","tanggal_bon","tanggal_terima","detail_barang","barang","rows","kode_barcode","nama_barang","merk_barang","kwalitas","satuan","qty","harga_satuan","parseFloat","harga_total","toLocaleString","parseInt","push","console","log","footer","autoTable","head","body","foot","startY","theme","rowPageBreak","pageBreak","margin","top","bodyStyles","lineWidth","lineColor","headStyles","fillColor","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","autoPrint","embed","output","x","window","open","document","write","CetakPenerimaanSupplierRekap","hasil","formatDateISO","kode_supplier","Object","keys","length","jml_bruto_rp","diskon_rp","jml_netto_rp","styles","cellWidth","lastAutoTable","getToday","HeadLaporanKartuStock","Component","constructor","props","super","this","state","listSupplier","componentDidMount","AxiosMasterGet","then","res","setState","render","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","className","Field","name","component","ReanderSelect","options","map","list","value","nama_supplier","type","label","placeholder","ReanderField","disabled","onSend","Fragment","reduxForm","form","enableReinitialize","connect","datamaster","LaporanPenerimaanSupplier","hasilLaporan","tanggal_awal","tanggal_akhir","lenght","ToastError","react_router_dom","to","panel","HeadLaporanPenerimaanSupplier"],"mappings":"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","file":"static/js/105.66cd3b82.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakPenerimaanSupplier = (\r\n  row1isi = \"\",\r\n  row2isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  data\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let finalY = 40;\r\n  let sub_total = 0;\r\n  let sub_qty = 0;\r\n\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN DETAIL PENERIMAAN SUPPLIER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   row 2\r\n  doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let tableColumn = [\r\n      [\r\n        {\r\n          content: `NO FAKTUR : ${item.no_terima}`,\r\n          colSpan: 5,\r\n        },\r\n        {\r\n          content: `NO BON : ${item.no_bon}`,\r\n          colSpan: 3,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `TANGGAL : ${item.tanggal_bon}`,\r\n          colSpan: 5,\r\n        },\r\n        {\r\n          content: `TANGGAL TERIMA : ${item.tanggal_terima}`,\r\n          colSpan: 3,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `BARCODE`,\r\n        },\r\n        {\r\n          content: `JENIS BARANG`,\r\n        },\r\n        {\r\n          content: `MERK`,\r\n        },\r\n        {\r\n          content: `KWT`,\r\n        },\r\n        {\r\n          content: `SATUAN`,\r\n        },\r\n        {\r\n          content: `QTY`,\r\n        },\r\n        {\r\n          content: `H. SATUAN`,\r\n        },\r\n        {\r\n          content: `TOTAL`,\r\n        },\r\n      ],\r\n    ];\r\n    item.detail_barang.forEach((barang, index) => {\r\n      let rows = [\r\n        barang.kode_barcode,\r\n        barang.nama_barang,\r\n        barang.merk_barang,\r\n        barang.kwalitas,\r\n        barang.satuan,\r\n        barang.qty,\r\n        barang.harga_satuan,\r\n        parseFloat(barang.harga_total).toLocaleString(\"id-ID\"),\r\n      ];\r\n      sub_total = sub_total + parseFloat(barang.harga_total);\r\n      sub_qty = sub_qty + parseInt(barang.qty);\r\n      tableRows.push(rows);\r\n      console.log(tableRows);\r\n    });\r\n    let footer = [\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"\",\r\n      \"Sub Total\",\r\n      `${sub_qty}`,\r\n      \"\",\r\n      `${parseFloat(sub_total).toLocaleString(\"id-ID\")}`,\r\n    ];\r\n    footRows.push(footer);\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      foot: footRows,\r\n      startY: index === 0 ? 35 : finalY + 5,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n      pageBreak: \"avoid\",\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [212, 212, 211],\r\n      },\r\n    });\r\n    finalY = doc.autoTableEndPosY() + 10;\r\n    tableRows = [];\r\n    footRows = [];\r\n    sub_total = 0;\r\n    sub_qty = 0;\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  doc.text(`User\t: ${username}`, 14, finalY + 10);\r\n  doc.text(`Cetak\t: ${tanggal}`, 14, finalY + 16);\r\n  doc.text(`Valid\t: ${validby}`, 14, finalY + 22);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakPenerimaanSupplier;\r\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport {\r\n  formatDateISO,\r\n  getToday,\r\n} from \"../../../../components/notification/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakPenerimaanSupplierRekap = (\r\n  row1isi = \"\",\r\n  row2isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  data\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let qty = 0;\r\n\r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `FAKTUR`,\r\n      },\r\n      {\r\n        content: `TANGGAL TERIMA`,\r\n      },\r\n      {\r\n        content: `NO BON`,\r\n        styles: { cellWidth: 20 },\r\n      },\r\n      {\r\n        content: `TANGGAL BON`,\r\n      },\r\n      {\r\n        content: `KODE SUPPLIER`,\r\n      },\r\n      {\r\n        content: `ITEM`,\r\n      },\r\n      {\r\n        content: `QTY`,\r\n      },\r\n      {\r\n        content: `TOTAL`,\r\n      },\r\n      {\r\n        content: `DISKON`,\r\n      },\r\n      {\r\n        content: `BERSIH`,\r\n      },\r\n    ],\r\n  ];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN REKAP PENERIMAAN SUPPLIER\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`Supplier : ${row1isi}`, 14, 25);\r\n  //   row 2\r\n  doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    item.detail_barang.forEach((hasil) => {\r\n      qty = qty + hasil.qty;\r\n    });\r\n    let rows = [\r\n      item.no_terima,\r\n      formatDateISO(item.tanggal_terima),\r\n      item.no_bon,\r\n      item.tanggal_bon,\r\n      item.kode_supplier,\r\n      Object.keys(item.detail_barang).length,\r\n      qty,\r\n      parseFloat(item.jml_bruto_rp).toLocaleString(\"id-ID\"),\r\n      parseFloat(item.diskon_rp).toLocaleString(\"id-ID\"),\r\n      parseFloat(item.jml_netto_rp).toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(rows);\r\n    console.log(tableRows);\r\n    qty = 0;\r\n  });\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: 35,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n  let finalY = doc.lastAutoTable.finalY + 10;\r\n  doc.text(`Print on\t: ${getToday()}`, 14, finalY + 10);\r\n  //   doc.text(`Cetak\t: ${tanggal}`, 14, finalY + 16);\r\n  //   doc.text(`Valid\t: ${validby}`, 14, finalY + 22);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakPenerimaanSupplierRekap;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { AxiosMasterGet } from \"../../../../axios\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../../components/notification/notification\";\r\n\r\nclass HeadLaporanKartuStock extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"supplier/get/all\").then((res) =>\r\n      this.setState({\r\n        listSupplier: res.data,\r\n      })\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"kode_supplier\"\r\n              component={ReanderSelect}\r\n              options={this.state.listSupplier.map((list) => {\r\n                let data = {\r\n                  value: list.kode_supplier,\r\n                  name: list.nama_supplier,\r\n                };\r\n                return data;\r\n              })}\r\n              type=\"text\"\r\n              label=\"Nama Supplier\"\r\n              placeholder=\"Masukan Nama Supplier\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"tanggal_awal\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Dari Tanggal\"\r\n              placeholder=\"Masukan Tanggal Awal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"tanggal_akhir\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Sampai Tanggal\"\r\n              placeholder=\"Masukan Sampai Tanggal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"type\"\r\n              component={ReanderSelect}\r\n              options={[\r\n                { value: \"REKAP\", name: \"REKAP\" },\r\n                { value: \"DETAIL\", name: \"DETAIL\" },\r\n              ]}\r\n              type=\"text\"\r\n              label=\"Type\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" disabled={this.props.onSend}>\r\n                {this.props.onSend ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Menyiapkan Laporan\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    Lihat Data <i className=\"fa fa-print ml-3 \"></i>\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanKartuStock = reduxForm({\r\n  form: \"HeadLaporanKartuStock\",\r\n  enableReinitialize: true,\r\n})(HeadLaporanKartuStock);\r\nexport default connect((state) => {\r\n  return {\r\n    onSend: state.datamaster.onSend,\r\n  };\r\n})(HeadLaporanKartuStock);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AxiosMasterGet } from \"../../../../axios\";\r\nimport { getToday } from \"../../../../components/helpers/function\";\r\nimport { ToastError } from \"../../../../components/notification/notification\";\r\nimport {\r\n  Panel,\r\n  PanelBody,\r\n  PanelHeader,\r\n} from \"../../../../components/panel/panel\";\r\nimport CetakPenerimaanSupplier from \"./CetakPenerimaanSupplier\";\r\nimport CetakPenerimaanSupplierRekap from \"./CetakPenerimaanSupplierRekap\";\r\nimport HeadLaporanPenerimaanSupplier from \"./HeadLaporanPenerimaanSupplier\";\r\n\r\nclass LaporanPenerimaanSupplier extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasilLaporan: [],\r\n    };\r\n  }\r\n\r\n  handleSubmit(data) {\r\n    AxiosMasterGet(\r\n      \"laporan/supplier/lap-terima-supplier/\" +\r\n        `${data.kode_supplier || \"SEMUA\"}&${data.tanggal_awal}&${\r\n          data.tanggal_akhir\r\n        }`\r\n    )\r\n      .then((res) => {\r\n        if (res.data.lenght === 0) {\r\n          ToastError(\"Data Laporan Kosong\");\r\n          return false;\r\n        } else {\r\n          this.setState({\r\n            hasilLaporan: res.data,\r\n          });\r\n        }\r\n      })\r\n      .then(() =>\r\n        data.type === \"DETAIL\"\r\n          ? this.state.hasilLaporan.length\r\n            ? CetakPenerimaanSupplier(\r\n                data.kode_supplier || \"SEMUA\",\r\n                getToday(),\r\n                \"ADMIN\",\r\n                getToday(),\r\n                \"ADMIN\",\r\n                this.state.hasilLaporan\r\n              )\r\n            : ToastError(\"Data Laporan Kosong\")\r\n          : this.state.hasilLaporan.length\r\n          ? CetakPenerimaanSupplierRekap(\r\n              data.kode_supplier || \"SEMUA\",\r\n              getToday(),\r\n              \"ADMIN\",\r\n              getToday(),\r\n              \"ADMIN\",\r\n              this.state.hasilLaporan\r\n            )\r\n          : ToastError(\"Data Laporan Kosong\")\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">\r\n            Laporan Penerimaan Supplier\r\n          </li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Penerimaan Supplier </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Penerimaan Supplier</PanelHeader>\r\n          <PanelBody>\r\n            <HeadLaporanPenerimaanSupplier\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n            />\r\n          </PanelBody>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaporanPenerimaanSupplier;\r\n"],"sourceRoot":""}