{"version":3,"sources":["validasi/normalize.jsx","validasi/ValidasiMasterKategori.jsx","pages/DataMaster/DataParameterHargaService/FormModalParameterHargaService.jsx"],"names":["__webpack_require__","d","__webpack_exports__","required","value","undefined","ValidasiMasterKategori","event","errors","kode_kategori","nama_kategori","harga_pergram","presentase","kadar","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_1__","react_loading_skeleton__WEBPACK_IMPORTED_MODULE_1___default","react_redux__WEBPACK_IMPORTED_MODULE_2__","redux_form__WEBPACK_IMPORTED_MODULE_3__","redux_form__WEBPACK_IMPORTED_MODULE_4__","_components_notification_notification__WEBPACK_IMPORTED_MODULE_5__","_validasi_normalize__WEBPACK_IMPORTED_MODULE_6__","_validasi_ValidasiMasterKategori__WEBPACK_IMPORTED_MODULE_7__","FormModalParameterHargaService","Component","constructor","props","super","this","state","listParameter","componentDidMount","render","a","createElement","onSubmit","handleSubmit","name","component","ReanderSelect","options","map","list","id_kategori_service","jenis_service","concat","harga_jasa_service","toLocaleString","type","label","placeholder","validate","width","height","ReanderField","className","disabled","onSend","Fragment","reduxForm","form","enableReinitialize","connect","datamaster","datahargaservice","initialValues","jenis_kategori","jasa_service"],"mappings":"2FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAO,MAoBMA,EAAYC,GAAWA,OAAQC,EAAY,uDCGzCC,IAvBgB,EAACF,EAAOG,KACrC,MAAMC,EAAS,GAmBf,OAjBKJ,EAAMK,gBACTD,EAAOC,cAAgB,2BAEpBL,EAAMM,gBACTF,EAAOE,cAAgB,oCAGpBN,EAAMO,gBACTH,EAAOG,cAAgB,mCAEpBP,EAAMQ,aACTJ,EAAOI,WAAa,iCAEjBR,EAAMS,QACTL,EAAOK,MAAQ,4BAGVL,sCCpBTR,EAAAc,EAAAZ,GAAA,IAAAa,EAAAf,EAAA,GAAAgB,EAAAhB,EAAAiB,EAAAF,GAAAG,EAAAlB,EAAA,IAAAmB,EAAAnB,EAAAiB,EAAAC,GAAAE,EAAApB,EAAA,IAAAqB,EAAArB,EAAA,KAAAsB,EAAAtB,EAAA,KAAAuB,EAAAvB,EAAA,IAAAwB,EAAAxB,EAAA,KAAAyB,EAAAzB,EAAA,KA4BA,MAAM0B,UAAuCC,YAC3CC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CACXC,cAAe,IAGnBC,qBAEAC,SACE,OACEnB,EAAAoB,EAAAC,cAAA,QAAMC,SAAUP,KAAKF,MAAMU,cACxBR,KAAKF,MAAMI,cACVjB,EAAAoB,EAAAC,cAAChB,EAAA,EAAD,CACEmB,KAAK,iBACLC,UAAWC,IACXC,QAASZ,KAAKF,MAAMI,cAAcW,IAAKC,IASrC,MARW,CACTzC,MAAOyC,EAAKC,oBACZN,KACEK,EAAKE,cAAL,sBAAAC,OAEE,OAASH,EAAKI,mBAAmBC,eAAe,SAFlD,SAONC,KAAK,OACLC,MAAM,iBACNC,YAAY,yBACZC,SAAUnD,MAGZa,EAAAoB,EAAAC,cAAClB,EAAAiB,EAAD,CAAUmB,MAAO,OAAQC,OAAQ,KAEnCxC,EAAAoB,EAAAC,cAAChB,EAAA,EAAD,CACEmB,KAAK,eACLC,UAAWgB,IACXN,KAAK,SACLC,MAAM,oBACNC,YAAY,yBAGdrC,EAAAoB,EAAAC,cAAA,UAAQqB,UAAU,uBAAuBC,SAAU5B,KAAKF,MAAM+B,QAC3D7B,KAAKF,MAAM+B,OACV5C,EAAAoB,EAAAC,cAAArB,EAAAoB,EAAAyB,SAAA,KACE7C,EAAAoB,EAAAC,cAAA,KAAGqB,UAAU,2BADf,0BAIA1C,EAAAoB,EAAAC,cAAArB,EAAAoB,EAAAyB,SAAA,eACS7C,EAAAoB,EAAAC,cAAA,KAAGqB,UAAU,gCASlChC,EAAiCoC,YAAU,CACzCC,KAAM,mBACNC,oBAAoB,EACpBV,SAAUhD,KAHqBwD,CAI9BpC,GACYuC,sBAjFKjC,QACwB3B,IAAtC2B,EAAMkC,WAAWC,iBACZ,CACLC,cAAe,CACbC,eAAgBrC,EAAMkC,WAAWC,iBAAiBE,eAClDtB,cAAef,EAAMkC,WAAWC,iBAAiBpB,cACjDuB,aAActC,EAAMkC,WAAWC,iBAAiBG,cAElDV,OAAQ5B,EAAMkC,WAAWN,QAGpB,CACLA,OAAQ5B,EAAMkC,WAAWN,QAqEI,KAApBK,CAA0BvC","file":"static/js/32.2ecacca3.chunk.js","sourcesContent":["export const Gramasi = (value, previousValue) => {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  const onlyNums = value.replace(/[^0-9.]+/g, \"\");\r\n  if (!previousValue || value.length > previousValue.length) {\r\n    return onlyNums;\r\n  }\r\n};\r\n\r\nexport const NumberOnly = (value, previousValue) => {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  const onlyNums = value.replace(/[^0-9]+/g, \"\");\r\n  if (!previousValue || value.length > previousValue.length) {\r\n    return onlyNums;\r\n  }\r\n};\r\n\r\nexport const required = (value) => (value ? undefined : \"Tidak Boleh Kosong\");\r\nexport const number = (value) =>\r\n  value && isNaN(Number(value)) ? \"Must be a number\" : undefined;\r\n","const ValidasiMasterKategori = (value, event) => {\r\n  const errors = {};\r\n  // console.log(event.charCode==13);\r\n  if (!value.kode_kategori) {\r\n    errors.kode_kategori = \"Kode Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.nama_kategori) {\r\n    errors.nama_kategori = \"Nama Kategori Tidak Boleh Kosong\";\r\n  }\r\n\r\n  if (!value.harga_pergram) {\r\n    errors.harga_pergram = \"Harga / Gram Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.presentase) {\r\n    errors.presentase = \"Presentase Tidak Boleh Kosong\";\r\n  }\r\n  if (!value.kadar) {\r\n    errors.kadar = \"Kadar Tidak Boleh Kosong\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default ValidasiMasterKategori;\r\n","import React, { Component } from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../components/notification/notification\";\r\nimport { required } from \"../../../validasi/normalize\";\r\nimport ValidasiMasterKategori from \"../../../validasi/ValidasiMasterKategori\";\r\n\r\nconst maptostate = (state) => {\r\n  if (state.datamaster.datahargaservice !== undefined) {\r\n    return {\r\n      initialValues: {\r\n        jenis_kategori: state.datamaster.datahargaservice.jenis_kategori,\r\n        jenis_service: state.datamaster.datahargaservice.jenis_service,\r\n        jasa_service: state.datamaster.datahargaservice.jasa_service,\r\n      },\r\n      onSend: state.datamaster.onSend,\r\n    };\r\n  } else {\r\n    return {\r\n      onSend: state.datamaster.onSend,\r\n    };\r\n  }\r\n};\r\n\r\nclass FormModalParameterHargaService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listParameter: [],\r\n    };\r\n  }\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        {this.props.listParameter ? (\r\n          <Field\r\n            name=\"jenis_kategori\"\r\n            component={ReanderSelect}\r\n            options={this.props.listParameter.map((list) => {\r\n              let data = {\r\n                value: list.id_kategori_service,\r\n                name:\r\n                  list.jenis_service +\r\n                  ` ( Harga Sakarang: ${\r\n                    \"Rp. \" + list.harga_jasa_service.toLocaleString(\"id-ID\")\r\n                  } )`,\r\n              };\r\n              return data;\r\n            })}\r\n            type=\"text\"\r\n            label=\"Jenis Kategori\"\r\n            placeholder=\"Masukan Jenis Kategori\"\r\n            validate={required}\r\n          />\r\n        ) : (\r\n          <Skeleton width={\"100%\"} height={50} />\r\n        )}\r\n        <Field\r\n          name=\"jasa_service\"\r\n          component={ReanderField}\r\n          type=\"number\"\r\n          label=\"Jasa Service (RP)\"\r\n          placeholder=\"Masukan Jasa Service\"\r\n        />\r\n\r\n        <button className=\"btn btn-primary mb-3\" disabled={this.props.onSend}>\r\n          {this.props.onSend ? (\r\n            <>\r\n              <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang Menyimpan\r\n            </>\r\n          ) : (\r\n            <>\r\n              Simpan <i className=\"fa fa-paper-plane ml-3 \"></i>\r\n            </>\r\n          )}\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormModalParameterHargaService = reduxForm({\r\n  form: \"dataHargaService\",\r\n  enableReinitialize: true,\r\n  validate: ValidasiMasterKategori,\r\n})(FormModalParameterHargaService);\r\nexport default connect(maptostate, null)(FormModalParameterHargaService);\r\n"],"sourceRoot":""}