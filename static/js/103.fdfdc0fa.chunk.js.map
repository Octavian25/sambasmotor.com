{"version":3,"sources":["pages/Laporan/LaporanPenjualan/PenjualanRongsok/CetakPenjualanRongsok.jsx","pages/Laporan/LaporanPenjualan/PenjualanRongsok/HeadLaporanPenjualanRongsok.jsx","pages/Laporan/LaporanPenjualan/PenjualanRongsok/LaporanPenjualanRongsok.jsx"],"names":["CetakPenjualanRongsok","row1isi","row2isi","data","doc","jsPDF","tableRows","footRows","total","setFontSize","text","concat","forEach","item","index","rows","formatDateISO","tanggal","no_faktur_jual","nama_barang","qty","satuan","parseFloat","harga_satuan","toLocaleString","harga_total","push","foot","autoTable","head","content","body","startY","theme","rowPageBreak","pageBreak","margin","top","bodyStyles","lineWidth","lineColor","headStyles","fillColor","embed","output","x","window","open","document","write","HeadLaporanPenjualanRongsok","Component","constructor","props","super","this","state","render","react_default","a","createElement","onSubmit","handleSubmit","className","Field","name","component","ReanderField","type","label","placeholder","reduxForm","form","enableReinitialize","connect","listkategori","datamaster","LaporanPenjualanRongsok","getLaporan","hasil","AxiosMasterGet","tanggal_awal","tanggal_akhir","then","res","setState","listLaporan","react_router_dom","to","panel","PenjualanRongsok_HeadLaporanPenjualanRongsok"],"mappings":"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","file":"static/js/103.fdfdc0fa.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { formatDateISO } from \"../../../../components/notification/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakPenjualanRongsok = (row1isi = \"\", row2isi = \"\", data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"landscape\");\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let total = 0;\r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `TANGGAL`,\r\n      },\r\n      {\r\n        content: `NO FAKTUR`,\r\n      },\r\n      {\r\n        content: `NAMA`,\r\n      },\r\n      {\r\n        content: `QTY`,\r\n      },\r\n      {\r\n        content: `PCK`,\r\n      },\r\n      {\r\n        content: `SATUAN`,\r\n      },\r\n      {\r\n        content: `TOTAL`,\r\n      },\r\n    ],\r\n  ];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN PENJUALAN RONGSOK\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`TANGGAL : ${row1isi} s/d ${row2isi}`, 14, 25);\r\n  //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let rows = [\r\n      formatDateISO(item.tanggal),\r\n      item.no_faktur_jual,\r\n      item.nama_barang,\r\n      item.qty,\r\n      item.satuan,\r\n      \"Rp. \" + parseFloat(item.harga_satuan).toLocaleString(\"id-ID\"),\r\n      \"Rp. \" + parseFloat(item.harga_total).toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(rows);\r\n    total = total + parseFloat(item.harga_total);\r\n  });\r\n  let foot = [\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"Total\",\r\n    `Rp. ${parseFloat(total).toLocaleString(\"id-ID\")}`,\r\n  ];\r\n  footRows.push(foot);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: 35,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [187, 187, 187],\r\n    },\r\n  });\r\n\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // x.document.close();\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakPenjualanRongsok;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { ReanderField } from \"../../../../components/notification/notification\";\r\n\r\nclass HeadLaporanPenjualanRongsok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"tanggal_awal\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Dari Tanggal\"\r\n              placeholder=\"Masukan Tanggal Awal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"tanggal_akhir\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Sampai Tanggal\"\r\n              placeholder=\"Masukan Sampai Tanggal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\">\r\n                Lihat Data <i className=\"fa fa-print ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanPenjualanRongsok = reduxForm({\r\n  form: \"HeadLaporanPenjualanRongsok\",\r\n  enableReinitialize: true,\r\n})(HeadLaporanPenjualanRongsok);\r\nexport default connect((state) => {\r\n  return {\r\n    listkategori: state.datamaster.listkategori,\r\n  };\r\n})(HeadLaporanPenjualanRongsok);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AxiosMasterGet } from \"../../../../axios\";\r\nimport {\r\n  Panel,\r\n  PanelBody,\r\n  PanelHeader,\r\n} from \"../../../../components/panel/panel\";\r\nimport CetakPenjualanRongsok from \"./CetakPenjualanRongsok\";\r\nimport HeadLaporanPenjualanRongsok from \"./HeadLaporanPenjualanRongsok\";\r\n\r\nclass LaporanPenjualanRongsok extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  getLaporan(hasil) {\r\n    AxiosMasterGet(\r\n      \"laporan/penjualan-rosok/lap-penjualan-rosok/\" +\r\n        `${hasil.tanggal_awal}&${hasil.tanggal_akhir}`\r\n    )\r\n      .then((res) =>\r\n        this.setState({\r\n          listLaporan: res.data,\r\n        })\r\n      )\r\n      .then(() =>\r\n        CetakPenjualanRongsok(\r\n          hasil.tanggal_awal,\r\n          hasil.tanggal_akhir,\r\n          this.state.listLaporan\r\n        )\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Penjualan Rongsok</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Penjualan Rongsok </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Penjualan Rongsok</PanelHeader>\r\n          <PanelBody>\r\n            <HeadLaporanPenjualanRongsok\r\n              onSubmit={(data) => this.getLaporan(data)}\r\n            />\r\n          </PanelBody>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaporanPenjualanRongsok;\r\n"],"sourceRoot":""}