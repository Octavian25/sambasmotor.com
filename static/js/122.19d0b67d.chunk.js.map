{"version":3,"sources":["pages/Transaksi/BookingService/ModalBookingService.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","redux_form__WEBPACK_IMPORTED_MODULE_2__","redux_form__WEBPACK_IMPORTED_MODULE_3__","_components_notification_notification__WEBPACK_IMPORTED_MODULE_4__","_actions_datamaster_action__WEBPACK_IMPORTED_MODULE_5__","ModalBookingService","Component","constructor","props","super","this","state","handleChange","nama","data","hasil","split","change","componentDidMount","dispatch","getCustomer","getKategoriService","getSales","render","a","createElement","onSubmit","handleSubmit","className","name","component","ReanderSelect","options","listCustomer","map","list","value","concat","kode_customer","nama_customer","alamat","handphone","nopol_kendaraan","merk_kendaraan","warna_kendaraann","type","label","placeholder","listkategoriservice","id_kategori_service","kategori_service","ReanderField","RenderTime","listsales","filter","kode_divisi","kode_pegawai","nama_pegawai","htmlFor","reduxForm","form","enableReinitialize","connect","datamaster","listcustomer"],"mappings":"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","file":"static/js/122.19d0b67d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n  RenderTime,\r\n} from \"../../../components/notification/notification\";\r\nimport {\r\n  getCustomer,\r\n  getKategoriService,\r\n  getSales,\r\n} from \"../../../actions/datamaster_action\";\r\n\r\nclass ModalBookingService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  handleChange(nama, data) {\r\n    let split = data || \"DEFAULT|DEFAULT\";\r\n    let hasil = split.split(\"|\");\r\n    this.props.change(nama, hasil[1]);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getCustomer());\r\n    this.props.dispatch(getKategoriService());\r\n    this.props.dispatch(getSales());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit}>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"pelaggan\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listCustomer.map((list) => {\r\n                    let data = {\r\n                      value: `${list.kode_customer}||${list.nama_customer}||${list.alamat}||${list.handphone}||${list.nopol_kendaraan}||${list.merk_kendaraan}||${list.warna_kendaraann}`,\r\n                      name: list.nama_customer,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Nama customer\"\r\n                  placeholder=\"Masukan Nama customer\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"kategori_service\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listkategoriservice.map((list) => {\r\n                    let data = {\r\n                      value: list.id_kategori_service,\r\n                      name: list.kategori_service,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Kategori Service\"\r\n                  placeholder=\"Masukan Kategori Service\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <Field\r\n                  name=\"tanggal\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                  label=\"Tanggal Pelayanan\"\r\n                  placeholder=\"Masukan Tanggal Pelayanan\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-1\">\r\n                <Field\r\n                  name=\"jam\"\r\n                  component={RenderTime}\r\n                  type=\"text\"\r\n                  label=\"Jam\"\r\n                  placeholder=\"Masukan Jam\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"id_mekanik\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listsales\r\n                    .filter((list) => list.kode_divisi === \"MKN\")\r\n                    .map((list) => {\r\n                      let data = {\r\n                        value: list.kode_pegawai,\r\n                        name: list.nama_pegawai,\r\n                      };\r\n                      return data;\r\n                    })}\r\n                  type=\"text\"\r\n                  label=\"ID Mekanik\"\r\n                  placeholder=\"Masukan ID Mekanik\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <label htmlFor=\"\">Catatan</label>\r\n                <Field\r\n                  name=\"catatan\"\r\n                  component=\"textarea\"\r\n                  type=\"text\"\r\n                  label=\"Catatan\"\r\n                  placeholder=\"Masukan Catatan\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12 mt-3\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\">\r\n                Simpan <i className=\"fa fa-paper-plane\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModalBookingService = reduxForm({\r\n  form: \"ModalBookingService\",\r\n  enableReinitialize: true,\r\n})(ModalBookingService);\r\nexport default connect((state) => {\r\n  return {\r\n    listCustomer: state.datamaster.listcustomer,\r\n    listkategoriservice: state.datamaster.listkategoriservice,\r\n    listsales: state.datamaster.listsales,\r\n  };\r\n})(ModalBookingService);\r\n"],"sourceRoot":""}