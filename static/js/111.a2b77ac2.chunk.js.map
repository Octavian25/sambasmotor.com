{"version":3,"sources":["pages/Laporan/LaporanStock/LaporanKartuStock/CetakKartuStock.jsx","pages/Laporan/LaporanStock/LaporanStockPerKategori/HeadLaporanStockPerKategori.jsx","pages/Laporan/LaporanStock/LaporanStockPerKategori/LaporanStockPerKategori.jsx"],"names":["CetakKartuStock","row1isi","row2isi","username","tanggal","validby","data","doc","jsPDF","tableRows","finalY","sub_qty","tableColumn","setFontSize","text","concat","forEach","barang","index","content","lokasi","colSpan","nama_barang","merk_barang","saldo_awal_barang","detail","rows","formatDateISO","no_bon","keterangan","masuk_qty","keluar_qty","saldo_barang","parseInt","qty","push","autoTable","head","body","foot","startY","theme","margin","top","bodyStyles","lineWidth","lineColor","headStyles","fillColor","autoTableEndPosY","pages","internal","getNumberOfPages","pageWidth","pageSize","width","pageHeight","height","j","horizontalPos","verticalPos","setPage","align","autoPrint","embed","output","x","window","open","document","write","HeadLaporanPengeluaranBarang","Component","constructor","props","super","this","state","componentDidMount","dispatch","getSupplier","getBarang","render","react_default","a","createElement","onSubmit","handleSubmit","className","Field","name","component","ReanderField","type","label","placeholder","ReanderSelect","options","listsupplier","map","list","value","kode_supplier","nama_supplier","listbarang","kode_barcode","reduxForm","form","enableReinitialize","connect","datamaster","LaporanStockPerKategori","listLaporan","getLaporan","hasil","AxiosMasterGet","tanggal_awal","tanggal_akhir","then","res","setState","getUserData","user_name","getToday","react_router_dom","to","panel","HeadLaporanStockPerKategori"],"mappings":"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","file":"static/js/111.a2b77ac2.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { formatDateISO } from \"../../../../components/notification/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakKartuStock = (\r\n  row1isi = \"\",\r\n  row2isi = \"\",\r\n  username = \"\",\r\n  tanggal = \"\",\r\n  validby = \"\",\r\n  data\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let finalY = 40;\r\n  let sub_qty = 0;\r\n  let tableColumn = [];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN KARTU STOCK\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`Tanggal : ${row1isi} s/d ${row2isi}`, 14, 25);\r\n  //   row 2\r\n  // doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((barang, index) => {\r\n    tableColumn = [\r\n      [\r\n        {\r\n          content: `LOKASI : ${barang.lokasi}`,\r\n          colSpan: 3,\r\n        },\r\n        {\r\n          content: `NAMA BARANG : ${barang.nama_barang}`,\r\n          colSpan: 3,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `MERK BARANG : ${barang.merk_barang}`,\r\n          colSpan: 3,\r\n        },\r\n        {\r\n          content: `SALDO AWAL : ${barang.saldo_awal_barang}`,\r\n          colSpan: 3,\r\n        },\r\n      ],\r\n      [\r\n        {\r\n          content: `TANGGAL`,\r\n        },\r\n        {\r\n          content: `NO BON`,\r\n        },\r\n        {\r\n          content: `KETERANGAN`,\r\n        },\r\n        {\r\n          content: `MASUK`,\r\n        },\r\n        {\r\n          content: `KELUAR`,\r\n        },\r\n        {\r\n          content: `SALDO`,\r\n        },\r\n      ],\r\n    ];\r\n    barang.detail.forEach((data) => {\r\n      let rows = [\r\n        formatDateISO(data.tanggal),\r\n        data.no_bon,\r\n        data.keterangan,\r\n        data.masuk_qty || \"\",\r\n        data.keluar_qty || \"\",\r\n        data.saldo_barang,\r\n      ];\r\n      sub_qty = sub_qty + parseInt(data.qty);\r\n      tableRows.push(rows);\r\n      sub_qty = 0;\r\n    });\r\n  });\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: 35,\r\n    theme: \"plain\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [187, 187, 187],\r\n    },\r\n  });\r\n  finalY = doc.autoTableEndPosY() + 10;\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  doc.text(`User\t: ${username}`, 14, finalY);\r\n  doc.text(`Cetak\t: ${tanggal}`, 14, finalY + 5);\r\n  doc.text(`Valid\t: ${validby}`, 14, finalY + 10);\r\n  const pages = doc.internal.getNumberOfPages();\r\n  const pageWidth = doc.internal.pageSize.width; //Optional\r\n  const pageHeight = doc.internal.pageSize.height; //Optional\r\n  doc.setFontSize(10); //Optional\r\n  for (let j = 1; j < pages + 1; j++) {\r\n    let horizontalPos = pageWidth / 2; //Can be fixed number\r\n    let verticalPos = pageHeight - 10; //Can be fixed number\r\n    doc.setPage(j);\r\n    doc.text(`${j} of ${pages}`, horizontalPos, verticalPos, {\r\n      align: \"center\",\r\n    });\r\n  }\r\n  doc.autoPrint();\r\n  // doc.save(`PenerimaanSUpplier.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakKartuStock;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getBarang, getSupplier } from \"../../../../actions/datamaster_action\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../../components/notification/notification\";\r\n\r\nclass HeadLaporanPengeluaranBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getSupplier());\r\n    this.props.dispatch(getBarang());\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tanggal_awal\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Dari Tanggal\"\r\n              placeholder=\"Masukan Tanggal Awal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"tanggal_akhir\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Sampai Tanggal\"\r\n              placeholder=\"Masukan Sampai Tanggal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"kode_supplier\"\r\n              component={ReanderSelect}\r\n              options={this.props.listsupplier.map((list) => {\r\n                let data = {\r\n                  value: list.kode_supplier,\r\n                  name: `${list.kode_supplier} - ${list.nama_supplier}`,\r\n                };\r\n                return data;\r\n              })}\r\n              type=\"text\"\r\n              label=\"Supplier\"\r\n              placeholder=\"Masukan Supplier\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-4\">\r\n            <Field\r\n              name=\"kode_barcode\"\r\n              component={ReanderSelect}\r\n              options={this.props.listbarang.map((list) => {\r\n                let data = {\r\n                  value: list.kode_barcode,\r\n                  name: `${list.kode_barcode} - ${list.nama_barang}`,\r\n                };\r\n                return data;\r\n              })}\r\n              type=\"text\"\r\n              label=\" Nama Barang\"\r\n              placeholder=\"Masukan Nama Barang\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\">\r\n                Lihat Data <i className=\"fa fa-print ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanPengeluaranBarang = reduxForm({\r\n  form: \"HeadLaporanPengeluaranBarang\",\r\n  enableReinitialize: true,\r\n})(HeadLaporanPengeluaranBarang);\r\nexport default connect((state) => {\r\n  return {\r\n    listsupplier: state.datamaster.listsupplier,\r\n    listbarang: state.datamaster.listbarang,\r\n  };\r\n})(HeadLaporanPengeluaranBarang);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AxiosMasterGet } from \"../../../../axios\";\r\nimport { getToday } from \"../../../../components/notification/function\";\r\nimport { getUserData } from \"../../../../components/notification/notification\";\r\nimport {\r\n  Panel,\r\n  PanelBody,\r\n  PanelHeader,\r\n} from \"../../../../components/panel/panel\";\r\nimport CetakKartuStock from \"../LaporanKartuStock/CetakKartuStock\";\r\nimport HeadLaporanStockPerKategori from \"./HeadLaporanStockPerKategori\";\r\n\r\nclass LaporanStockPerKategori extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listLaporan: [],\r\n    };\r\n  }\r\n\r\n  getLaporan(hasil) {\r\n    AxiosMasterGet(\r\n      `laporan/stocking/lap-kartu-barang/${hasil.kode_supplier}&${hasil.tanggal_awal}&${hasil.tanggal_akhir}&${hasil.kode_barcode}`\r\n    )\r\n      .then((res) =>\r\n        this.setState({\r\n          listLaporan: res.data,\r\n        })\r\n      )\r\n      .then(() =>\r\n        CetakKartuStock(\r\n          hasil.tanggal_awal,\r\n          hasil.tanggal_akhir,\r\n          getUserData().user_name,\r\n          getToday(),\r\n          getUserData().user_name,\r\n          this.state.listLaporan\r\n        )\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Kartu Stock</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Kartu Stock </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Kartu Stock</PanelHeader>\r\n          <PanelBody>\r\n            <HeadLaporanStockPerKategori\r\n              onSubmit={(data) => this.getLaporan(data)}\r\n            />\r\n          </PanelBody>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaporanStockPerKategori;\r\n"],"sourceRoot":""}