{"version":3,"sources":["pages/Laporan/LaporanPenjualan/Mekanik/CetakMekanik.jsx","pages/Laporan/LaporanPenjualan/Mekanik/HeadLaporanMekanik.jsx","pages/Laporan/LaporanPenjualan/Mekanik/LaporanMekanik.jsx"],"names":["CetakMekanik","row1isi","row2isi","data","doc","jsPDF","setFontSize","text","concat","tableRows","sub_total","forEach","barang","index","rows","tanggal","mekanik","no_faktur","jenis_service","parseFloat","total","toLocaleString","push","console","log","autoTable","head","content","body","startY","theme","rowPageBreak","pageBreak","margin","top","bodyStyles","lineWidth","lineColor","headStyles","fillColor","embed","output","x","window","open","document","write","close","HeadLaporanMekanik","Component","constructor","props","super","this","state","componentDidMount","dispatch","getSales","render","react_default","a","createElement","onSubmit","handleSubmit","className","Field","name","component","ReanderField","type","label","placeholder","ReanderSelect","options","listsales","filter","kode_divisi","map","list","value","kode_pegawai","nama_pegawai","reduxForm","form","enableReinitialize","connect","datamaster","LaporanMekanik","getLaporan","hasil","AxiosMasterGet","tanggal_awal","tanggal_akhir","kode_mekanik","then","res","setState","listLaporan","getUserData","user_name","getToday","react_router_dom","to","panel","Mekanik_HeadLaporanMekanik"],"mappings":"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","file":"static/js/90.e97f7959.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakMekanik = (\r\n  row1isi = \"\",\r\n  row2isi = \"\",\r\n\r\n  data\r\n) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF();\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN MEKANIK\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`TANGGAL : ${row1isi}`, 14, 25);\r\n  doc.text(`MEKANIK : ${row2isi}`, 14, 30);\r\n  //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n\r\n  let tableRows = [];\r\n\r\n  let sub_total = 0;\r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `TANGGAL`,\r\n      },\r\n      {\r\n        content: `MEKANIK`,\r\n      },\r\n      {\r\n        content: `NOMOR FAKTUR`,\r\n      },\r\n      {\r\n        content: `KETERANGAN`,\r\n      },\r\n      {\r\n        content: `TOTAL`,\r\n      },\r\n    ],\r\n  ];\r\n  data.forEach((barang, index) => {\r\n    let rows = [\r\n      barang.tanggal,\r\n      barang.mekanik,\r\n      barang.no_faktur,\r\n      barang.jenis_service,\r\n      parseFloat(barang.total).toLocaleString(\"id-ID\"),\r\n    ];\r\n    sub_total = sub_total + parseFloat(barang.total);\r\n    tableRows.push(rows);\r\n    console.log(tableRows);\r\n\r\n    sub_total = 0;\r\n  });\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    startY: 35,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [187, 187, 187],\r\n    },\r\n  });\r\n  // const date = Date().split(\" \");\r\n  // we use a date string to generate our filename.\r\n  // const dateStr = date[2] + date[3] + date[4];\r\n  // ticket title. and margin-top + margin-left\r\n\r\n  // doc.text(`User\t: ${username}`, 14, finalY + 10);\r\n  // doc.text(`Cetak\t: ${tanggal}`, 14, finalY + 16);\r\n  // doc.text(`Valid\t: ${validby}`, 14, finalY + 22);\r\n\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  x.document.close();\r\n};\r\n\r\nexport default CetakMekanik;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getSales } from \"../../../../actions/datamaster_action\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../../components/notification/notification\";\r\n\r\nclass HeadLaporanMekanik extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getSales());\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"tanggal_awal\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Tanggal Awal\"\r\n              placeholder=\"Masukan Tanggal Awal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"tanggal_akhir\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Tanggal Akhir\"\r\n              placeholder=\"Masukan Sampai Tanggal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"kode_mekanik\"\r\n              component={ReanderSelect}\r\n              options={this.props.listsales\r\n                .filter((data) => data.kode_divisi === \"MKN\")\r\n                .map((list) => {\r\n                  let data = {\r\n                    value: list.kode_pegawai,\r\n                    name: list.nama_pegawai,\r\n                  };\r\n                  return data;\r\n                })}\r\n              type=\"text\"\r\n              label=\"Kode Mekanik\"\r\n              placeholder=\"Masukan Kode Mekanik\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\">\r\n                Lihat Data <i className=\"fa fa-print ml-3\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanMekanik = reduxForm({\r\n  form: \"HeadLaporanMekanik\",\r\n  enableReinitialize: true,\r\n})(HeadLaporanMekanik);\r\nexport default connect((state) => {\r\n  return {\r\n    listsales: state.datamaster.listsales,\r\n  };\r\n})(HeadLaporanMekanik);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AxiosMasterGet } from \"../../../../axios\";\r\nimport { getToday } from \"../../../../components/notification/function\";\r\nimport { getUserData } from \"../../../../components/notification/notification\";\r\nimport {\r\n  Panel,\r\n  PanelBody,\r\n  PanelHeader,\r\n} from \"../../../../components/panel/panel\";\r\nimport CetakMekanik from \"./CetakMekanik\";\r\nimport HeadLaporanMekanik from \"./HeadLaporanMekanik\";\r\n\r\nclass LaporanMekanik extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  getLaporan(hasil) {\r\n    AxiosMasterGet(\r\n      `laporan/service/lap-mekanik/${hasil.tanggal_awal}&${hasil.tanggal_akhir}&${hasil.kode_mekanik}`\r\n    )\r\n      .then((res) =>\r\n        this.setState({\r\n          listLaporan: res && res.data,\r\n        })\r\n      )\r\n      .then(() =>\r\n        CetakMekanik(\r\n          hasil.tanggal_awal,\r\n          hasil.kode_mekanik,\r\n          getUserData().user_name,\r\n          getToday(),\r\n          getUserData().user_name,\r\n          this.state.listLaporan\r\n        )\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Mekanik</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Mekanik </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Mekanik</PanelHeader>\r\n          <PanelBody>\r\n            <HeadLaporanMekanik onSubmit={(data) => this.getLaporan(data)} />\r\n          </PanelBody>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaporanMekanik;\r\n"],"sourceRoot":""}