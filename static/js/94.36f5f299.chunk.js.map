{"version":3,"sources":["pages/Laporan/LaporanPiutang/PembayaranCustomer/CetakPembayaranCustomer.jsx","pages/Laporan/LaporanPiutang/PembayaranCustomer/HeadLaporanPembayaranCustomer.jsx","pages/Laporan/LaporanPiutang/PembayaranCustomer/LaporanPembayaranCustomer.jsx"],"names":["CetakPembayaranPiutang","data","doc","jsPDF","tableRows","footRows","total","setFontSize","text","concat","getToday","forEach","item","index","rows","nama_customer","tanggal_bayar","no_faktur_bayar","no_nota","jenis_pembayaran","parseFloat","total_bayar","toLocaleString","push","foot","autoTable","head","content","body","startY","theme","rowPageBreak","pageBreak","margin","top","bodyStyles","lineWidth","lineColor","headStyles","fillColor","embed","output","x","window","open","document","write","HeadLaporanPembayaranCustomer","Component","constructor","props","super","this","state","componentDidMount","dispatch","getCustomer","render","react_default","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","className","Field","name","component","ReanderField","type","label","placeholder","ReanderSelect","options","customer","map","list","value","kode_customer","disabled","onSend","Fragment","reduxForm","form","enableReinitialize","connect","datamaster","listcustomer","LaporanPembayaranCustomer","listLaporan","getLaporan","hasil","AxiosMasterGet","tanggal_awal","tanggal_akhir","then","res","ToastError","setState","react_router_dom","to","panel","PembayaranCustomer_HeadLaporanPembayaranCustomer"],"mappings":"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","file":"static/js/94.36f5f299.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport { getToday } from \"../../../../components/notification/function\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst CetakPembayaranPiutang = (data) => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"landscape\");\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let total = 0;\r\n  let tableColumn = [\r\n    [\r\n      {\r\n        content: `NAMA CUSTOMER`,\r\n      },\r\n      {\r\n        content: `ALAMAT`,\r\n      },\r\n      {\r\n        content: `HANDPHONE`,\r\n      },\r\n      {\r\n        content: `PIUTANG AWAL`,\r\n      },\r\n      {\r\n        content: `BAYAR`,\r\n      },\r\n      {\r\n        content: `SALDO`,\r\n      },\r\n    ],\r\n  ];\r\n  doc.setFontSize(15);\r\n  doc.text(\"LAPORAN PEMBAYARAN PIUTANG\", 14, 15);\r\n  doc.setFontSize(10);\r\n  //row 1\r\n  doc.text(`TANGGAL : ${getToday()}`, 14, 25);\r\n  //   row 2\r\n  //   doc.text(`Tanggal\t: ${row2isi}`, 120, 25);\r\n  data.forEach((item, index) => {\r\n    let rows = [\r\n      item.nama_customer,\r\n      item.tanggal_bayar,\r\n      item.no_faktur_bayar,\r\n      item.no_nota,\r\n      item.jenis_pembayaran,\r\n      parseFloat(item.total_bayar).toLocaleString(\"id-ID\"),\r\n    ];\r\n    tableRows.push(rows);\r\n    total = total + parseFloat(item.total_bayar);\r\n  });\r\n\r\n  let foot = [\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"Grand Total\",\r\n    `${parseFloat(total).toLocaleString(\"id-ID\")}`,\r\n  ];\r\n  footRows.push(foot);\r\n  doc.autoTable({\r\n    head: tableColumn,\r\n    body: tableRows,\r\n    foot: footRows,\r\n    startY: 35,\r\n    theme: \"plain\",\r\n    rowPageBreak: \"avoid\",\r\n    pageBreak: \"avoid\",\r\n    margin: { top: 20 },\r\n    bodyStyles: { lineWidth: 0.02, lineColor: \"#000\" },\r\n    headStyles: {\r\n      lineWidth: 0.02,\r\n      lineColor: \"#000\",\r\n      fillColor: [212, 212, 211],\r\n    },\r\n  });\r\n\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // x.document.close();\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default CetakPembayaranPiutang;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getCustomer } from \"../../../../actions/datamaster_action\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../../components/notification/notification\";\r\n\r\nclass HeadLaporanPembayaranCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getCustomer());\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit}\r\n        onKeyPress={(e) => {\r\n          e.key === \"Enter\" && e.preventDefault();\r\n        }}\r\n      >\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"tanggal_awal\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Dari Tanggal\"\r\n              placeholder=\"Masukan Tanggal Awal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"tanggal_akhir\"\r\n              component={ReanderField}\r\n              type=\"date\"\r\n              label=\"Sampai Tanggal\"\r\n              placeholder=\"Masukan Sampai Tanggal\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-3\">\r\n            <Field\r\n              name=\"kode_customer\"\r\n              component={ReanderSelect}\r\n              options={this.props.customer.map((list) => {\r\n                let data = {\r\n                  value: list.kode_customer,\r\n                  name: list.nama_customer,\r\n                };\r\n                return data;\r\n              })}\r\n              label=\"Nama Customer / Semua\"\r\n              placeholder=\"Masukan Jenis\"\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" disabled={this.props.onSend}>\r\n                {this.props.onSend ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Menyiapkan Laporan\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    Lihat Data <i className=\"fa fa-print ml-3 \"></i>\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanPembayaranCustomer = reduxForm({\r\n  form: \"HeadLaporanPembayaranCustomer\",\r\n  enableReinitialize: true,\r\n})(HeadLaporanPembayaranCustomer);\r\nexport default connect((state) => {\r\n  return {\r\n    customer: state.datamaster.listcustomer,\r\n    onSend: state.datamaster.onSend,\r\n  };\r\n})(HeadLaporanPembayaranCustomer);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AxiosMasterGet } from \"../../../../axios\";\r\nimport { ToastError } from \"../../../../components/notification/notification\";\r\nimport {\r\n  Panel,\r\n  PanelBody,\r\n  PanelHeader,\r\n} from \"../../../../components/panel/panel\";\r\nimport CetakPembayaranPiutang from \"./CetakPembayaranCustomer\";\r\nimport HeadLaporanPembayaranCustomer from \"./HeadLaporanPembayaranCustomer\";\r\n\r\nclass LaporanPembayaranCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listLaporan: [],\r\n    };\r\n  }\r\n  getLaporan(hasil) {\r\n    AxiosMasterGet(\r\n      \"laporan/bayar-piutang-customer/lap-pembayaran-piutang/\" +\r\n        `${hasil.tanggal_awal}&${hasil.tanggal_akhir}&${hasil.kode_customer}`\r\n    )\r\n      .then((res) => {\r\n        if (res.data) {\r\n          ToastError(\"data Kosong\");\r\n          return false;\r\n        } else {\r\n          this.setState({\r\n            listLaporan: res.data,\r\n          });\r\n        }\r\n      })\r\n      .then(() =>\r\n        this.state.listLaporan\r\n          ? CetakPembayaranPiutang(this.state.listLaporan)\r\n          : ToastError(\"Data Kosong\")\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Pembayaran Piutang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Pembayaran Piutang </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Pembayaran Piutang</PanelHeader>\r\n          <PanelBody>\r\n            <HeadLaporanPembayaranCustomer\r\n              onSubmit={(data) => this.getLaporan(data)}\r\n            />\r\n          </PanelBody>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaporanPembayaranCustomer;\r\n"],"sourceRoot":""}