{"version":3,"sources":["pages/Transaksi/BookingService/ModalBookingService.jsx","validasi/normalize.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","redux_form__WEBPACK_IMPORTED_MODULE_2__","redux_form__WEBPACK_IMPORTED_MODULE_3__","_components_notification_notification__WEBPACK_IMPORTED_MODULE_4__","_actions_datamaster_action__WEBPACK_IMPORTED_MODULE_5__","_validasi_normalize__WEBPACK_IMPORTED_MODULE_6__","_components_notification_function__WEBPACK_IMPORTED_MODULE_7__","_axios__WEBPACK_IMPORTED_MODULE_8__","ModalBookingService","Component","constructor","props","super","this","state","member","reguler","listCustomer","handleChange","nama","data","hasil","split","change","componentDidMount","dispatch","getCustomer","getKategoriService","getSales","getToday","getMember","setState","AxiosMasterGet","then","res","map","list","value","concat","nama_customer","alamat","handphone","nopol_kendaraan","name","catch","ToastError","render","a","createElement","onSubmit","handleSubmit","onKeyPress","e","key","preventDefault","className","component","type","onClick","checked","ReanderSelect","options","onChange","label","placeholder","validate","required","loading","ReanderField","listkategoriservice","jenis_service","listsales","filter","kode_divisi","kode_pegawai","nama_pegawai","htmlFor","disabled","onSend","Fragment","reduxForm","form","enableReinitialize","connect","datamaster","listcustomer","d","undefined"],"mappings":"4FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,GAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,GAiBA,MAAMc,UAA4BC,YAChCC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CACXC,QAAQ,EACRC,SAAS,EACTC,aAAc,IAGlBC,aAAaC,EAAMC,GACjB,IACIC,GADQD,GAAQ,mBACFE,MAAM,KACxBT,KAAKF,MAAMY,OAAOJ,EAAME,EAAM,IAEhCG,oBACEX,KAAKF,MAAMc,SAASC,gBACpBb,KAAKF,MAAMc,SAASE,gBACpBd,KAAKF,MAAMc,SAASG,gBACpBf,KAAKF,MAAMY,OAAO,UAAWM,eAC7BH,eAEFI,YACEjB,KAAKkB,SAAS,CACZhB,QAAQ,EACRC,SAAS,IAEXH,KAAKF,MAAMY,OAAO,WAAY,IAC9BS,YAAe,yBACZC,KAAMC,GACLrB,KAAKkB,SAAS,CACZd,aACEiB,GACAA,EAAId,KAAKe,IAAKC,IAKZ,MAJW,CACTC,MAAK,GAAAC,OAAKF,EAAKG,cAAV,MAAAD,OAA4BF,EAAKI,OAAjC,MAAAF,OAA4CF,EAAKK,UAAjD,MAAAH,OAA+DF,EAAKM,iBACzEC,KAAMP,EAAKG,oBAMpBK,MAAM,IAAMC,YAAW,qBAE5BnB,cACEb,KAAKkB,SAAS,CACZhB,QAAQ,EACRC,SAAS,IAEXH,KAAKF,MAAMY,OAAO,WAAY,IAC9BS,YAAe,oBAAoBC,KAAMC,GACvCrB,KAAKkB,SAAS,CACZd,aACEiB,GACAA,EAAId,KAAKe,IAAKC,IAKZ,MAJW,CACTC,MAAK,GAAAC,OAAKF,EAAKG,cAAV,MAAAD,OAA4BF,EAAKI,OAAjC,MAAAF,OAA4CF,EAAKK,UAAjD,MAAAH,OAA+DF,EAAKM,iBACzEC,KAAMP,EAAKG,oBAOvBO,SACE,OACEhD,EAAAiD,EAAAC,cAAA,WACElD,EAAAiD,EAAAC,cAAA,QACEC,SAAUpC,KAAKF,MAAMuC,aACrBC,WAAaC,IACD,UAAVA,EAAEC,KAAmBD,EAAEE,mBAGzBxD,EAAAiD,EAAAC,cAAA,OAAKO,UAAU,aACbzD,EAAAiD,EAAAC,cAAA,OAAKO,UAAU,OACbzD,EAAAiD,EAAAC,cAAA,OAAKO,UAAU,YACbzD,EAAAiD,EAAAC,cAAA,SAAOO,UAAU,QAAjB,mBACAzD,EAAAiD,EAAAC,cAAA,WACElD,EAAAiD,EAAAC,cAAA,aACElD,EAAAiD,EAAAC,cAAC/C,EAAA,EAAD,CACE0C,KAAK,kBACLa,UAAU,QACVC,KAAK,QACLpB,MAAM,SACNkB,UAAU,OACVG,QAAS,IAAM7C,KAAKiB,YACpB6B,QAAS9C,KAAKC,MAAMC,SARxB,UAYAjB,EAAAiD,EAAAC,cAAA,SAAOO,UAAU,QACfzD,EAAAiD,EAAAC,cAAC/C,EAAA,EAAD,CACE0C,KAAK,kBACLa,UAAU,QACVC,KAAK,QACLpB,MAAM,UACNkB,UAAU,OACVG,QAAS,IAAM7C,KAAKa,cACpBiC,QAAS9C,KAAKC,MAAME,UARxB,aAcJlB,EAAAiD,EAAAC,cAAA,OAAKO,UAAU,YACbzD,EAAAiD,EAAAC,cAAC/C,EAAA,EAAD,CACE0C,KAAK,WACLa,UAAWI,IACXC,QAAShD,KAAKC,MAAMG,aACpB6C,SAAW1C,GACTP,KAAKF,MAAMY,OAAO,kBAAmBH,EAAKE,MAAM,MAAM,IAExDmC,KAAK,OACLM,MAAM,gBACNC,YAAY,gBACZC,SAAUC,IACVC,QAAStD,KAAKF,MAAMM,eAAiB,MAGzCnB,EAAAiD,EAAAC,cAAA,OAAKO,UAAU,mBACbzD,EAAAiD,EAAAC,cAAC/C,EAAA,EAAD,CACE0C,KAAK,kBACLa,UAAWY,IACXX,KAAK,OACLM,MAAM,QACNC,YAAY,mBAGhBlE,EAAAiD,EAAAC,cAAA,OAAKO,UAAU,YACbzD,EAAAiD,EAAAC,cAAC/C,EAAA,EAAD,CACE0C,KAAK,mBACLa,UAAWI,IACXC,QAAShD,KAAKF,MAAM0D,oBAAoBlC,IAAKC,IAK3C,MAJW,CACTC,MAAOD,EAAKkC,cACZ3B,KAAMP,EAAKkC,iBAIfb,KAAK,OACLM,MAAM,gBACNC,YAAY,gBACZC,SAAUC,IACVC,QAAStD,KAAKF,MAAM0D,sBAAwB,MAGhDvE,EAAAiD,EAAAC,cAAA,OAAKO,UAAU,YACbzD,EAAAiD,EAAAC,cAAC/C,EAAA,EAAD,CACE0C,KAAK,UACLa,UAAWY,IACXX,KAAK,OACLM,MAAM,oBACNC,YAAY,4BACZC,SAAUC,OAGdpE,EAAAiD,EAAAC,cAAA,OAAKO,UAAU,YACbzD,EAAAiD,EAAAC,cAAC/C,EAAA,EAAD,CACE0C,KAAK,MACLa,UAAWY,IACXX,KAAK,OACLM,MAAM,MACNC,YAAY,iBAGhBlE,EAAAiD,EAAAC,cAAA,OAAKO,UAAU,YACbzD,EAAAiD,EAAAC,cAAC/C,EAAA,EAAD,CACE0C,KAAK,aACLa,UAAWI,IACXC,QAAShD,KAAKF,MAAM4D,UACjBC,OAAQpC,GAA8B,QAArBA,EAAKqC,aACtBtC,IAAKC,IAKJ,MAJW,CACTC,MAAOD,EAAKsC,aACZ/B,KAAMP,EAAKuC,gBAIjBlB,KAAK,OACLM,MAAM,aACNC,YAAY,qBACZC,SAAUC,IACVC,QAAStD,KAAKF,MAAM4D,YAAc,MAGtCzE,EAAAiD,EAAAC,cAAA,OAAKO,UAAU,aACbzD,EAAAiD,EAAAC,cAAA,SAAO4B,QAAQ,IAAf,WACA9E,EAAAiD,EAAAC,cAAC/C,EAAA,EAAD,CACE0C,KAAK,UACLa,UAAU,WACVC,KAAK,OACLM,MAAM,UACNC,YAAY,kBACZT,UAAU,eACVU,SAAUC,MAEZpE,EAAAiD,EAAAC,cAAA,sCAINlD,EAAAiD,EAAAC,cAAA,OAAKO,UAAU,kBACbzD,EAAAiD,EAAAC,cAAA,OAAKO,UAAU,cACbzD,EAAAiD,EAAAC,cAAA,UAAQO,UAAU,kBAAkBsB,SAAUhE,KAAKF,MAAMmE,QACtDjE,KAAKF,MAAMmE,OACVhF,EAAAiD,EAAAC,cAAAlD,EAAAiD,EAAAgC,SAAA,KACEjF,EAAAiD,EAAAC,cAAA,KAAGO,UAAU,2BADf,0BAKAzD,EAAAiD,EAAAC,cAAAlD,EAAAiD,EAAAgC,SAAA,eACSjF,EAAAiD,EAAAC,cAAA,KAAGO,UAAU,mCAYxC/C,EAAsBwE,YAAU,CAC9BC,KAAM,sBACNC,oBAAoB,GAFAF,CAGnBxE,GACY2E,sBAASrE,IACf,CACLG,aAAcH,EAAMsE,WAAWC,aAC/BhB,oBAAqBvD,EAAMsE,WAAWf,oBACtCE,UAAWzD,EAAMsE,WAAWb,UAC5BO,OAAQhE,EAAMsE,WAAWN,SALdK,CAOZ3E,qCCzPHd,EAAA4F,EAAA1F,EAAA,sBAAAsE,IAAO,MAoBMA,EAAY7B,GAAWA,OAAQkD,EAAY","file":"static/js/60.e166e368.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n  ToastError,\r\n} from \"../../../components/notification/notification\";\r\nimport {\r\n  getCustomer,\r\n  getKategoriService,\r\n  getSales,\r\n} from \"../../../actions/datamaster_action\";\r\nimport { required } from \"../../../validasi/normalize\";\r\nimport { getToday } from \"../../../components/notification/function\";\r\nimport { AxiosMasterGet } from \"../../../axios\";\r\n\r\nclass ModalBookingService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      member: false,\r\n      reguler: false,\r\n      listCustomer: [],\r\n    };\r\n  }\r\n  handleChange(nama, data) {\r\n    let split = data || \"DEFAULT|DEFAULT\";\r\n    let hasil = split.split(\"|\");\r\n    this.props.change(nama, hasil[1]);\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getCustomer());\r\n    this.props.dispatch(getKategoriService());\r\n    this.props.dispatch(getSales());\r\n    this.props.change(\"tanggal\", getToday());\r\n    getCustomer();\r\n  }\r\n  getMember() {\r\n    this.setState({\r\n      member: true,\r\n      reguler: false,\r\n    });\r\n    this.props.change(\"pelaggan\", \"\");\r\n    AxiosMasterGet(\"member/get-member-all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listCustomer:\r\n            res &&\r\n            res.data.map((list) => {\r\n              let data = {\r\n                value: `${list.nama_customer}||${list.alamat}||${list.handphone}||${list.nopol_kendaraan}`,\r\n                name: list.nama_customer,\r\n              };\r\n              return data;\r\n            }),\r\n        })\r\n      )\r\n      .catch(() => ToastError(\"Error Get Member\"));\r\n  }\r\n  getCustomer() {\r\n    this.setState({\r\n      member: false,\r\n      reguler: true,\r\n    });\r\n    this.props.change(\"pelaggan\", \"\");\r\n    AxiosMasterGet(\"customer/get/all\").then((res) =>\r\n      this.setState({\r\n        listCustomer:\r\n          res &&\r\n          res.data.map((list) => {\r\n            let data = {\r\n              value: `${list.nama_customer}||${list.alamat}||${list.handphone}||${list.nopol_kendaraan}`,\r\n              name: list.nama_customer,\r\n            };\r\n            return data;\r\n          }),\r\n      })\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form\r\n          onSubmit={this.props.handleSubmit}\r\n          onKeyPress={(e) => {\r\n            e.key === \"Enter\" && e.preventDefault();\r\n          }}\r\n        >\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-2\">\r\n                <label className=\"mb-4\">Jenis Penjualan</label>\r\n                <div>\r\n                  <label>\r\n                    <Field\r\n                      name=\"jenis_penjualan\"\r\n                      component=\"input\"\r\n                      type=\"radio\"\r\n                      value=\"member\"\r\n                      className=\"mr-3\"\r\n                      onClick={() => this.getMember()}\r\n                      checked={this.state.member}\r\n                    />\r\n                    Member\r\n                  </label>\r\n                  <label className=\"ml-3\">\r\n                    <Field\r\n                      name=\"jenis_penjualan\"\r\n                      component=\"input\"\r\n                      type=\"radio\"\r\n                      value=\"reguler\"\r\n                      className=\"mr-3\"\r\n                      onClick={() => this.getCustomer()}\r\n                      checked={this.state.reguler}\r\n                    />\r\n                    Reguler\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <Field\r\n                  name=\"pelaggan\"\r\n                  component={ReanderSelect}\r\n                  options={this.state.listCustomer}\r\n                  onChange={(data) =>\r\n                    this.props.change(\"nopol_kendaraan\", data.split(\"||\")[3])\r\n                  }\r\n                  type=\"text\"\r\n                  label=\"Nama customer\"\r\n                  placeholder=\"Nama customer\"\r\n                  validate={required}\r\n                  loading={this.props.listCustomer === [] ? true : false}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3 d-none\">\r\n                <Field\r\n                  name=\"nopol_kendaraan\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"nopol\"\r\n                  placeholder=\"Masukan nopol\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <Field\r\n                  name=\"kategori_service\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listkategoriservice.map((list) => {\r\n                    let data = {\r\n                      value: list.jenis_service,\r\n                      name: list.jenis_service,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  type=\"text\"\r\n                  label=\"Jenis Service\"\r\n                  placeholder=\"Jenis Service\"\r\n                  validate={required}\r\n                  loading={this.props.listkategoriservice === [] ? true : false}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-2\">\r\n                <Field\r\n                  name=\"tanggal\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                  label=\"Tanggal Pelayanan\"\r\n                  placeholder=\"Masukan Tanggal Pelayanan\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-1\">\r\n                <Field\r\n                  name=\"jam\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"Jam\"\r\n                  placeholder=\"Masukan Jam\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"id_mekanik\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listsales\r\n                    .filter((list) => list.kode_divisi === \"MKN\")\r\n                    .map((list) => {\r\n                      let data = {\r\n                        value: list.kode_pegawai,\r\n                        name: list.nama_pegawai,\r\n                      };\r\n                      return data;\r\n                    })}\r\n                  type=\"text\"\r\n                  label=\"ID Mekanik\"\r\n                  placeholder=\"Masukan ID Mekanik\"\r\n                  validate={required}\r\n                  loading={this.props.listsales === [] ? true : false}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <label htmlFor=\"\">Catatan</label>\r\n                <Field\r\n                  name=\"catatan\"\r\n                  component=\"textarea\"\r\n                  type=\"text\"\r\n                  label=\"Catatan\"\r\n                  placeholder=\"Masukan Catatan\"\r\n                  className=\"form-control\"\r\n                  validate={required}\r\n                />\r\n                <span>**Mohon Isi Catatan</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-12 mt-3\">\r\n            <div className=\"text-right\">\r\n              <button className=\"btn btn-primary\" disabled={this.props.onSend}>\r\n                {this.props.onSend ? (\r\n                  <>\r\n                    <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                    Menyimpan\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    Simpan <i className=\"fa fa-paper-plane ml-3 \"></i>\r\n                  </>\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModalBookingService = reduxForm({\r\n  form: \"ModalBookingService\",\r\n  enableReinitialize: true,\r\n})(ModalBookingService);\r\nexport default connect((state) => {\r\n  return {\r\n    listCustomer: state.datamaster.listcustomer,\r\n    listkategoriservice: state.datamaster.listkategoriservice,\r\n    listsales: state.datamaster.listsales,\r\n    onSend: state.datamaster.onSend,\r\n  };\r\n})(ModalBookingService);\r\n","export const Gramasi = (value, previousValue) => {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  const onlyNums = value.replace(/[^0-9.]+/g, \"\");\r\n  if (!previousValue || value.length > previousValue.length) {\r\n    return onlyNums;\r\n  }\r\n};\r\n\r\nexport const NumberOnly = (value, previousValue) => {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  const onlyNums = value.replace(/[^0-9]+/g, \"\");\r\n  if (!previousValue || value.length > previousValue.length) {\r\n    return onlyNums;\r\n  }\r\n};\r\n\r\nexport const required = (value) => (value ? undefined : \"Tidak Boleh Kosong\");\r\nexport const number = (value) =>\r\n  value && isNaN(Number(value)) ? \"Must be a number\" : undefined;\r\n"],"sourceRoot":""}