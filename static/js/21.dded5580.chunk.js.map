{"version":3,"sources":["pages/Stoking/PermintaanBarang/HeadPermintaanBarang.jsx","pages/Stoking/PermintaanBarang/PermintaanBarang.jsx","validasi/normalize.jsx","config/Helper.jsx"],"names":["HeadPermintaanBarang","Component","constructor","props","super","this","state","listDivisi","listSales","listSupplier","columns","dataField","text","sort","csvExport","headerClasses","formatter","rowcontent","row","setState","react_default","a","createElement","className","type","onClick","deleteBarang","Swal","fire","title","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","then","result","isConfirmed","deleteLocalItemBarcode","kode_barcode","dispatch","getPermintaanTemp","componentDidMount","getSales","AxiosMasterGet","res","change","data","no_permintaan","getToday","render","onSubmit","handleSubmit","autoComplete","Field","name","component","ReanderField","label","placeholder","readOnly","ReanderSelect","options","listsales","filter","kode_divisi","map","list","value","kode_pegawai","nama_pegawai","loading","onSend","validate","required","showModal","permintaan_temp","tabel","keyField","CSVExport","textEmpty","lib_default","width","height","Fragment","reduxForm","form","enableReinitialize","connect","initialValues","localStorage","getItem","datamaster","ModalPermintaanBarang","lazy","__webpack_require__","e","bind","stocking","React","isEdit","modalDialog","isLoading","datakategori","no_acc","nama_bank","atas_nama","setItem","handleModal","hasil","local","JSON","parse","local2","filtered","findIndex","filtered2","qty","parseInt","parseFloat","kode_supplier","dataTable","nama_barang","merk","kwalitas","ukuran","stock","splice","push","stringify","NotifSucces","reset","simpanLocal","sendData","onProgress","kirim","divisi","pegawai","tanggal","detail_barang","tableRows","forEach","i","rows","columnTabel","AxiosMasterPost","CetakNota","multipleDeleteLocal","onFinish","catch","err","NotifError","response","react_router_dom","to","panel","PermintaanBarang_HeadPermintaanBarang","ModalGlobal","content","react","fallback","count","d","__webpack_exports__","undefined","sweetalert2__WEBPACK_IMPORTED_MODULE_0__","sweetalert2__WEBPACK_IMPORTED_MODULE_0___default","n","nama","Promise","resolve","reject","array","timer"],"mappings":"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","file":"static/js/21.dded5580.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { getSales, showModal } from \"../../../actions/datamaster_action\";\r\nimport {\r\n  deleteLocalItemBarcode,\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../components/notification/notification\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport Swal from \"sweetalert2\";\r\nimport { getPermintaanTemp } from \"../../../actions/stocking_action\";\r\nimport { AxiosMasterGet } from \"../../../axios\";\r\nimport Tabel from \"../../../components/Tabel/tabel\";\r\nimport { getToday } from \"../../../components/notification/function\";\r\nimport { required } from \"../../../validasi/normalize\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    initialValues: {\r\n      no_permintaan: localStorage.getItem(\"kode_permintaan_barang\") || \"\",\r\n    },\r\n    onSend: state.datamaster.onSend,\r\n    listsales: state.datamaster.listsales,\r\n  };\r\n};\r\nclass HeadPermintaanBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listDivisi: [],\r\n      listSales: [],\r\n      listSupplier: [],\r\n      columns: [\r\n        {\r\n          dataField: \"kode_barcode\",\r\n          text: \"Kode barcode\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n        },\r\n        {\r\n          dataField: \"merk\",\r\n          text: \"Merk\",\r\n        },\r\n        {\r\n          dataField: \"kwalitas\",\r\n          text: \"Kualitas\",\r\n        },\r\n        {\r\n          dataField: \"ukuran\",\r\n          text: \"Ukuran\",\r\n        },\r\n        {\r\n          dataField: \"stock\",\r\n          text: \"Stock\",\r\n        },\r\n        {\r\n          dataField: \"qty\",\r\n          text: \"Qty\",\r\n        },\r\n\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            this.setState({});\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.deleteBarang(row)}\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    Hapus\r\n                    <i className=\"fa fa-trash ml-2\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n  deleteBarang(row) {\r\n    Swal.fire({\r\n      title: \"Anda Yakin !!\",\r\n      text: \"Ingin Menghapus Data Ini ?\",\r\n      icon: \"warning\",\r\n      position: \"top-center\",\r\n      cancelButtonText: \"Tidak\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"OK\",\r\n      showConfirmButton: true,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteLocalItemBarcode(\"PermintaanBarang_temp\", row.kode_barcode);\r\n        // deleteLocalItemBarcode(\"PermintaanBarang_temp\", row.kode_barcode);\r\n        this.props.dispatch(getPermintaanTemp());\r\n      }\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getSales());\r\n    AxiosMasterGet(\"permintaan-barang/generate/no-trx\").then((res) =>\r\n      this.props.change(\"no_permintaan\", res.data[0].no_permintaan)\r\n    );\r\n    this.props.change(\"tanggal\", getToday());\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit} autoComplete={true}>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"col-lg-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-lg-2\">\r\n                <Field\r\n                  name=\"no_permintaan\"\r\n                  component={ReanderField}\r\n                  type=\"text\"\r\n                  label=\"Nomor Permintaan\"\r\n                  placeholder=\"Masukan Nomor Permintaan\"\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"pegawai\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listsales\r\n                    .filter((data) => data.kode_divisi === \"MKN\")\r\n                    .map((list) => {\r\n                      let data = {\r\n                        value: list.kode_pegawai,\r\n                        name: list.nama_pegawai,\r\n                      };\r\n                      return data;\r\n                    })}\r\n                  type=\"text\"\r\n                  label=\"Pegawai\"\r\n                  placeholder=\"Masukan Pegawai\"\r\n                  loading={this.props.onSend}\r\n                  validate={required}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <Field\r\n                  name=\"tanggal\"\r\n                  component={ReanderField}\r\n                  type=\"date\"\r\n                  label=\"Tanggal\"\r\n                  placeholder=\"Masukan Tanggal\"\r\n                  validate={required}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-12 mb-5\">\r\n          <div className=\"text-right\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-warning\"\r\n              onClick={() => this.props.dispatch(showModal())}\r\n            >\r\n              Tambah Barang <i className=\"fa fa-plus ml-3\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          {this.props.permintaan_temp ? (\r\n            <div className=\"col-lg-12\">\r\n              <Tabel\r\n                keyField=\"kode_barcode\"\r\n                data={this.props.permintaan_temp || []}\r\n                columns={this.state.columns}\r\n                CSVExport\r\n                textEmpty=\"Silahkan Tekan Tombol Kuning Untuk Tambah Barang\"\r\n              />\r\n            </div>\r\n          ) : (\r\n            <Skeleton width={\"100%\"} height={400} />\r\n          )}\r\n        </div>\r\n        <div className=\"col-lg-12 mb-5 mt-3\">\r\n          <div className=\"text-right\">\r\n            <button className=\"btn btn-primary\">\r\n              {this.props.onSend ? (\r\n                <>\r\n                  <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                  Menyimpan\r\n                </>\r\n              ) : (\r\n                <>\r\n                  Simpan <i className=\"fa fa-paper-plane ml-3 \"></i>\r\n                </>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nHeadPermintaanBarang = reduxForm({\r\n  form: \"permintaanBarang\",\r\n  enableReinitialize: true,\r\n})(HeadPermintaanBarang);\r\nexport default connect(maptostate, null)(HeadPermintaanBarang);\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport ModalGlobal from \"../../ModalGlobal.jsx\";\r\nimport {\r\n  NotifError,\r\n  NotifSucces,\r\n} from \"../../../components/notification/notification.jsx\";\r\nimport { Panel, PanelHeader } from \"../../../components/panel/panel.jsx\";\r\nimport HeadPermintaanBarang from \"./HeadPermintaanBarang.jsx\";\r\nimport CetakNota from \"../CetakNota.jsx\";\r\nimport { getPermintaanTemp } from \"../../../actions/stocking_action.jsx\";\r\nimport { simpanLocal } from \"../../../config/Helper.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport { AxiosMasterGet, AxiosMasterPost } from \"../../../axios.js\";\r\nimport { multipleDeleteLocal } from \"../../../components/notification/function.jsx\";\r\nimport { onFinish, onProgress } from \"../../../actions/datamaster_action.jsx\";\r\n\r\nconst ModalPermintaanBarang = lazy(() => import(\"./ModalPermintaanBarang.jsx\"));\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    permintaan_temp: state.stocking.permintaan_temp,\r\n  };\r\n};\r\n\r\nclass PermintaanBarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      datakategori: [\r\n        {\r\n          no_acc: \"8200930213\",\r\n          nama_bank: \"BCA\",\r\n          atas_nama: \"OCTAVIAN\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getPermintaanTemp());\r\n    AxiosMasterGet(\"permintaan-barang/generate/no-trx\").then((res) =>\r\n      localStorage.setItem(\"kode_permintaan_barang\", res.data[0].no_permintaan)\r\n    );\r\n  }\r\n\r\n  handleModal(hasil) {\r\n    let local =\r\n      JSON.parse(localStorage.getItem(\"PermintaanBarang_temp_kirim\")) || [];\r\n    let local2 =\r\n      JSON.parse(localStorage.getItem(\"PermintaanBarang_temp\")) || [];\r\n    let filtered = local.findIndex(\r\n      (list) => list.kode_barcode === hasil.kode_barcode\r\n    );\r\n    let filtered2 = local2.findIndex(\r\n      (list) => list.kode_barcode === hasil.kode_barcode\r\n    );\r\n    if (filtered !== -1) {\r\n      let data = {\r\n        kode_barcode: hasil.kode_barcode,\r\n        qty: parseInt(hasil.qty) + parseFloat(local[filtered].qty),\r\n        kode_supplier: hasil.kode_supplier,\r\n      };\r\n      let dataTable = {\r\n        kode_barcode: hasil.kode_barcode,\r\n        nama_barang: hasil.nama_barang,\r\n        merk: hasil.merk,\r\n        kwalitas: hasil.kwalitas,\r\n        ukuran: hasil.ukuran,\r\n        stock: hasil.stock,\r\n        qty: parseInt(hasil.qty) + parseInt(local2[filtered2].qty),\r\n      };\r\n      local.splice(filtered, 1);\r\n      local2.splice(filtered2, 1);\r\n      local.push(data);\r\n      local2.push(dataTable);\r\n      localStorage.setItem(\"PermintaanBarang_temp\", JSON.stringify(local2));\r\n      localStorage.setItem(\r\n        \"PermintaanBarang_temp_kirim\",\r\n        JSON.stringify(local)\r\n      );\r\n      NotifSucces(\"Berhasil\");\r\n      this.props.dispatch(reset(\"ModalReturnSupplier\"));\r\n      this.props.dispatch(getPermintaanTemp());\r\n    } else {\r\n      let data = {\r\n        kode_barcode: hasil.kode_barcode,\r\n        qty: parseInt(hasil.qty),\r\n        kode_supplier: hasil.kode_supplier,\r\n      };\r\n      let dataTable = {\r\n        kode_barcode: hasil.kode_barcode,\r\n        nama_barang: hasil.nama_barang,\r\n        merk: hasil.merk,\r\n        kwalitas: hasil.kwalitas,\r\n        ukuran: hasil.ukuran,\r\n        stock: hasil.stock,\r\n        qty: hasil.qty,\r\n      };\r\n      simpanLocal(\"PermintaanBarang_temp\", dataTable)\r\n        .then(() => this.props.dispatch(reset(\"ModalPermintaanBarang\")))\r\n        .then(() => this.props.dispatch(getPermintaanTemp()));\r\n      simpanLocal(\"PermintaanBarang_temp_kirim\", data)\r\n        .then(() => this.props.dispatch(reset(\"ModalPermintaanBarang\")))\r\n        .then(() => this.props.dispatch(getPermintaanTemp()));\r\n    }\r\n  }\r\n  sendData(hasil) {\r\n    this.props.dispatch(onProgress());\r\n    let kirim = {\r\n      no_permintaan: hasil.no_permintaan,\r\n      kode_divisi: hasil.divisi || \"MKN\",\r\n      kode_pegawai: hasil.pegawai,\r\n      tanggal: hasil.tanggal,\r\n      detail_barang: JSON.parse(\r\n        localStorage.getItem(\"PermintaanBarang_temp_kirim\")\r\n      ),\r\n    };\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    let table = JSON.parse(localStorage.getItem(\"PermintaanBarang_temp\"));\r\n    table.forEach((data, i) => {\r\n      const rows = [\r\n        ++i,\r\n        data.kode_barcode,\r\n        data.nama_barang,\r\n        data.merk,\r\n        data.kwalitas,\r\n        data.qty,\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n    let columnTabel = [\"NO\", \"BARCODE\", \"JENIS BARANG\", \"MERK\", \"KW\", \"QTY\"];\r\n    // INISIALISASI SELESAI -> PANGGIL AXIOS DAN PANGGIL PRINT SAAT AXIOS BERHASIL\r\n    AxiosMasterPost(\"permintaan-barang/post-transaksi\", kirim)\r\n      .then(() => NotifSucces(\"Berhasil Menyimpan Data\"))\r\n      .then(() =>\r\n        CetakNota(\r\n          \"Tanggal\",\r\n          hasil.tanggal,\r\n          \"PEGAWAI\",\r\n          hasil.pegawai,\r\n          \"NO PERMINTAAN\",\r\n          hasil.no_permintaan,\r\n          \"DIVISI\",\r\n          hasil.divisi,\r\n          \"ADMIN\",\r\n          \"01-28-2021\",\r\n          \"ADMIN\",\r\n          columnTabel,\r\n          \"BUKTI PERMINTAAN BARANG\",\r\n          tableRows,\r\n          [],\r\n          true\r\n        )\r\n      )\r\n      .then(() =>\r\n        multipleDeleteLocal([\r\n          \"PermintaanBarang_temp_kirim\",\r\n          \"PermintaanBarang_temp\",\r\n          \"kode_permintaan_barang\",\r\n        ])\r\n      )\r\n      .then(() => this.props.dispatch(reset(\"permintaanBarang\")))\r\n      .then(() => this.props.dispatch(getPermintaanTemp()))\r\n      .then(() => this.props.dispatch(onFinish()))\r\n      .catch((err) =>\r\n        NotifError(err.response.data).then(() =>\r\n          this.props.dispatch(onFinish())\r\n        )\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Permintaan Barang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Permintaan Barang </h1>\r\n        <Panel>\r\n          <PanelHeader>Permintaan Barang</PanelHeader>\r\n          <br />\r\n          <div className=\"col-lg-12\">\r\n            <HeadPermintaanBarang\r\n              onSubmit={(data) => this.sendData(data)}\r\n              permintaan_temp={this.props.permintaan_temp}\r\n            />\r\n          </div>\r\n          {/* Master Kategori */}\r\n\r\n          <br />\r\n          {/* End Master Kategori */}\r\n          <ModalGlobal\r\n            title={\r\n              this.state.isEdit\r\n                ? \"Edit Data Permintaan Barang\"\r\n                : \"Tambah Data Barang\"\r\n            }\r\n            content={\r\n              <Suspense\r\n                fallback={<Skeleton width={\"100%\"} height={50} count={2} />}\r\n              >\r\n                <ModalPermintaanBarang\r\n                  onSubmit={(data) => this.handleModal(data)}\r\n                  onSend={this.props.onSend}\r\n                  isEdit={this.state.isEdit}\r\n                />\r\n              </Suspense>\r\n            }\r\n          />\r\n\r\n          {/* End Tambah Master Kategori  */}\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(PermintaanBarang);\r\n","export const Gramasi = (value, previousValue) => {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  const onlyNums = value.replace(/[^0-9.]+/g, \"\");\r\n  if (!previousValue || value.length > previousValue.length) {\r\n    return onlyNums;\r\n  }\r\n};\r\n\r\nexport const NumberOnly = (value, previousValue) => {\r\n  if (!value) {\r\n    return value;\r\n  }\r\n  const onlyNums = value.replace(/[^0-9]+/g, \"\");\r\n  if (!previousValue || value.length > previousValue.length) {\r\n    return onlyNums;\r\n  }\r\n};\r\n\r\nexport const required = (value) => (value ? undefined : \"Tidak Boleh Kosong\");\r\nexport const number = (value) =>\r\n  value && isNaN(Number(value)) ? \"Must be a number\" : undefined;\r\n","import Swal from \"sweetalert2\";\r\n\r\nexport const simpanLocal = (nama, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    let array = JSON.parse(localStorage.getItem(nama)) || [];\r\n    array.push(data);\r\n    localStorage.setItem(nama, JSON.stringify(array));\r\n    Swal.fire({\r\n      position: \"top-right\",\r\n      text: \"Tambah Data Berhasil\",\r\n      timer: 2000,\r\n      icon: \"success\",\r\n      showConfirmButton: false,\r\n    })\r\n      .then(() => resolve(\"Berhaisl\"))\r\n      .catch(() => reject(\"GAGAL\"));\r\n  });\r\n};\r\n"],"sourceRoot":""}