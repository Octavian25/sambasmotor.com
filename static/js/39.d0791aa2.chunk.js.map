{"version":3,"sources":["pages/Transaksi/DaftarService/CekBooking.jsx","pages/Transaksi/DaftarService/DaftarService.jsx","pages/ModalGlobal.jsx","assets/emptyTable.jsx","components/Tabel/tabel.jsx","assets/empty.svg","components/helpers/field.jsx","pages/Transaksi/DaftarService/TambahService.jsx"],"names":["CekBooking","Component","constructor","props","super","this","state","listBooking","columns","dataField","text","componentDidMount","AxiosMasterGet","then","res","setState","data","render","react_default","a","createElement","tabel","keyField","ModalDaftarService","lazy","Promise","all","__webpack_require__","e","bind","connect","kunci_temp","stocking","totalbarang","transaksi","totalsparepart","listdaftarservice","noFaktur","datamaster","React","isEdit","modalDialog","isLoading","dispatch","getListService","getFaktur","localStorage","setItem","no_daftar_service","handleSubmit","hasil","no_booking","booking","no_daftar","no_faktur","nopol_kendaraan","booking_nopol","tgl_masuk","tanggal_masuk","km_masuk","tgl_keluar","tanggal_keluar","km_keluar","jdw_service","service_selanjutnya","km_service","km_service_berikutnya","keluhan","keluhan_konsumen","id_mekanik","kode_mekanik","status_booking","undefined","detail_barang","JSON","parse","getItem","console","log","stringify","AxiosMasterPost","NotifSucces","reset","removeItem","catch","err","ToastError","concat","showBooking","showModal","showBarang","tambahSparepart","service","kode_supplier","kode","kategori_service","nama","nama_service","qty","harga_satuan","harga_service","harga_total","keterangan","keterangan_service","jenis_barang","barang","kode_sparepart","nama_sparepart","harga_sparepart","array","push","ToastSucces","hideModal","className","react_router_dom","to","panel","onSubmit","ModalGlobal","content","DaftarService_CekBooking","TambahService","title","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_2__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","_actions_datamaster_action__WEBPACK_IMPORTED_MODULE_5__","isOpen","backdrop","keyboard","toggle","size","EmptyTable","src","empty","width","height","alt","SearchBar","Search","ExportCSVButton","CSVExport","Tabel","textEmpty","handleClick","tambahData","expandRow","selectRow","exportCSV","react_bootstrap_table2_toolkit_lib_default","search","searchProps","onClick","type","lib_default","Object","assign","pagination","paginationFactory","baseProps","noDataIndication","emptyTable","csvProps","react_loading_skeleton_lib_default","module","exports","p","d","__webpack_exports__","ReanderField","input","label","readOnly","placeholder","meta","touched","error","warning","htmlFor","onKeyPress","event","key","preventDefault","autoComplete","redux_form__WEBPACK_IMPORTED_MODULE_2__","redux_form__WEBPACK_IMPORTED_MODULE_3__","redux_form_input_masks__WEBPACK_IMPORTED_MODULE_4__","_axios__WEBPACK_IMPORTED_MODULE_6__","_components_helpers_field__WEBPACK_IMPORTED_MODULE_7__","_components_notification_notification__WEBPACK_IMPORTED_MODULE_8__","currencyMask","createNumberMask","prefix","locale","listSupplier","getKategoriService","getBarang","setSparepart","split","change","data_supplier","setService","setBarang","name","component","ReanderSelect","options","listkategoriservice","map","list","value","harga_jasa_service","jenis_service","onChange","ReanderFieldInline","listBarang","kode_barang","harga_jual","nama_barang","kode_barcode","stock","nama_supplier","reduxForm","form","enableReinitialize","listbarang"],"mappings":"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","file":"static/js/39.d0791aa2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { AxiosMasterGet } from \"../../../axios\";\r\nimport Tabel from \"../../../components/Tabel/tabel\";\r\n\r\nclass CekBooking extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listBooking: [],\r\n      columns: [\r\n        {\r\n          dataField: \"no_booking\",\r\n          text: \"No Booking\",\r\n        },\r\n        {\r\n          dataField: \"tgl_booking\",\r\n          text: \"Tanggal Booking\",\r\n        },\r\n        {\r\n          dataField: \"nopol_kendaraan\",\r\n          text: \"Nomor Polisi\",\r\n        },\r\n        {\r\n          dataField: \"jenis_service\",\r\n          text: \"Jenis Service\",\r\n        },\r\n        {\r\n          dataField: \"tgl_layanan\",\r\n          text: \"Tanggal\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"service/booking/getDataBookingAll\").then((res) =>\r\n      this.setState({\r\n        listBooking: res && res.data,\r\n      })\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tabel\r\n          data={this.state.listBooking}\r\n          columns={this.state.columns}\r\n          keyField=\"no_booking\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CekBooking;\r\n","import React, { lazy } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  NotifSucces,\r\n  ToastError,\r\n  ToastSucces,\r\n} from \"../../../components/notification/notification.jsx\";\r\nimport {\r\n  Panel,\r\n  PanelBody,\r\n  PanelHeader,\r\n} from \"../../../components/panel/panel.jsx\";\r\nimport { reset } from \"redux-form\";\r\nimport ModalGlobal from \"../../ModalGlobal.jsx\";\r\nimport TambahService from \"./TambahService.jsx\";\r\nimport { getListService } from \"../../../actions/transaksi_action.jsx\";\r\nimport {\r\n  getFaktur,\r\n  hideModal,\r\n  showModal,\r\n} from \"../../../actions/datamaster_action.jsx\";\r\nimport { AxiosMasterGet, AxiosMasterPost } from \"../../../axios.js\";\r\nimport CekBooking from \"./CekBooking.jsx\";\r\n\r\nconst ModalDaftarService = lazy(() => import(\"./ModalDaftarService.jsx\"));\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    kunci_temp: state.stocking.kunci_temp,\r\n    totalbarang: state.transaksi.totalbarang,\r\n    totalsparepart: state.transaksi.totalsparepart,\r\n    listdaftarservice: state.transaksi.listdaftarservice,\r\n    noFaktur: state.datamaster.noFaktur,\r\n  };\r\n};\r\n\r\nclass BookingService extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getListService());\r\n    this.props.dispatch(getFaktur());\r\n    AxiosMasterGet(\"daftar-service/generate/no-trx\").then((res) =>\r\n      localStorage.setItem(\"no_daftar_service\", res.data[0].no_daftar_service)\r\n    );\r\n  }\r\n  handleSubmit(hasil) {\r\n    let data = {\r\n      no_booking: hasil.booking ? true : false,\r\n      no_daftar: hasil.no_faktur,\r\n      nopol_kendaraan: hasil.nopol_kendaraan || hasil.booking_nopol,\r\n      tgl_masuk: hasil.tanggal_masuk,\r\n      km_masuk: hasil.km_masuk,\r\n      tgl_keluar: hasil.tanggal_keluar,\r\n      km_keluar: hasil.km_keluar,\r\n      jdw_service: hasil.service_selanjutnya,\r\n      km_service: hasil.km_service_berikutnya,\r\n      keluhan: hasil.keluhan_konsumen,\r\n      id_mekanik: hasil.kode_mekanik,\r\n      status_booking: hasil.booking === undefined ? \"false\" : \"true\",\r\n      detail_barang: JSON.parse(\r\n        localStorage.getItem(\"list_service_daftar_temp\")\r\n      ),\r\n    };\r\n\r\n    console.log(JSON.stringify(data));\r\n    // return false;\r\n    AxiosMasterPost(\"daftar-service/post-transaksi\", data)\r\n      .then(() =>\r\n        NotifSucces(\"Berhasil Menambahan Data Booking\")\r\n          .then(() => this.props.dispatch(reset(\"ModalBookingService\")))\r\n          .then(() => localStorage.removeItem(\"list_service_daftar_temp\"))\r\n          .then(() => this.props.dispatch(reset(\"ModalDaftarService\")))\r\n          .then(() => this.props.dispatch(getListService()))\r\n      )\r\n      .catch((err) =>\r\n        ToastError(`Terjadi Kesalahan Saat Menyimpan, Error :${err}`)\r\n      );\r\n  }\r\n  showBooking() {\r\n    this.setState({\r\n      booking: true,\r\n    });\r\n    this.props.dispatch(showModal());\r\n  }\r\n  showBarang() {\r\n    this.setState({\r\n      booking: false,\r\n    });\r\n    this.props.dispatch(showModal());\r\n  }\r\n  tambahSparepart(hasil) {\r\n    let service = {\r\n      kode_supplier: \"-\",\r\n      kode: hasil.kategori_service,\r\n      nama: hasil.nama_service,\r\n      qty: 1,\r\n      harga_satuan: hasil.harga_service,\r\n      harga_total: hasil.harga_service,\r\n      keterangan: hasil.keterangan_service,\r\n      jenis_barang: \"JASA SERVICE\",\r\n    };\r\n    let barang = {\r\n      kode_supplier: hasil.kode_supplier,\r\n      kode: hasil.kode_sparepart,\r\n      nama: hasil.nama_sparepart,\r\n      qty: 1,\r\n      harga_satuan: hasil.harga_sparepart,\r\n      harga_total: hasil.harga_sparepart,\r\n      keterangan: hasil.kategori_service,\r\n      jenis_barang: \"SPAREPART\",\r\n    };\r\n    let array =\r\n      JSON.parse(localStorage.getItem(\"list_service_daftar_temp\")) || [];\r\n    array.push(service);\r\n    array.push(barang);\r\n    localStorage.setItem(\"list_service_daftar_temp\", JSON.stringify(array));\r\n    ToastSucces(\"Tambah Data Berhasil\");\r\n    this.props.dispatch(hideModal());\r\n    this.props.dispatch(reset(\"TambahService\"));\r\n    this.props.dispatch(getListService());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Daftar Service</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Daftar Service </h1>\r\n        <Panel>\r\n          <PanelHeader>Daftar Service</PanelHeader>\r\n          <PanelBody>\r\n            <br />\r\n            <ModalDaftarService\r\n              onSubmit={(data) => this.handleSubmit(data)}\r\n              showBarang={() => this.showBarang()}\r\n              showBooking={() => this.showBooking()}\r\n            />\r\n            {/* End Tambah Master Kategori  */}\r\n          </PanelBody>\r\n        </Panel>\r\n\r\n        <ModalGlobal\r\n          content={\r\n            this.state.booking ? (\r\n              <CekBooking />\r\n            ) : (\r\n              <TambahService onSubmit={(data) => this.tambahSparepart(data)} />\r\n            )\r\n          }\r\n          title={this.state.booking ? \"Lihat Booking\" : \"Tambah Data\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(BookingService);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\r\nimport { hideModal } from \"../actions/datamaster_action\";\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    isOpen: state.datamaster.modalDialog,\r\n  };\r\n};\r\nclass ModalGlobal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Modal\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        isOpen={this.props.isOpen}\r\n        toggle={() => this.props.dispatch(hideModal())}\r\n        size={this.props.size || \"xl\"}\r\n      >\r\n        <ModalHeader toggle={() => this.props.dispatch(hideModal())}>\r\n          {this.props.title}\r\n        </ModalHeader>\r\n        <ModalBody>{this.props.content}</ModalBody>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(ModalGlobal);\r\n","import React from \"react\";\r\nimport empty from \"./empty.svg\";\r\n\r\nfunction EmptyTable(props) {\r\n  return (\r\n    <div className=\"col-lg-12\">\r\n      <div className=\"text-center\">\r\n        <img src={empty} width=\"250\" height=\"250\" alt=\"Empty\"></img>\r\n        <h5>{props.text}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmptyTable;\r\n","import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport EmptyTable from \"../../assets/emptyTable\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\nfunction Tabel(props) {\r\n  let text = props.textEmpty;\r\n  let handleClick = props.handleClick;\r\n  let tambahData = props.tambahData;\r\n  let expandRow = props.expandRow;\r\n  let selectRow = props.selectRow;\r\n  let exportCSV = props.exportCSV;\r\n  return props.data ? (\r\n    <ToolkitProvider\r\n      keyField={props.keyField}\r\n      data={props.data || []}\r\n      columns={props.columns}\r\n      search\r\n    >\r\n      {(props) => (\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"text-left\">\r\n              <SearchBar {...props.searchProps} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"text-right\">\r\n              {tambahData && (\r\n                <button\r\n                  onClick={handleClick}\r\n                  className=\"btn btn-primary\"\r\n                  type=\"button\"\r\n                >\r\n                  Tambah Data\r\n                  <i className=\"fa fa-plus ml-3\"></i>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-12\">\r\n            <BootstrapTable\r\n              pagination={paginationFactory()}\r\n              selectRow={selectRow}\r\n              expandRow={expandRow}\r\n              {...props.baseProps}\r\n              noDataIndication={<EmptyTable text={text || \"Tidak Ada Data\"} />}\r\n            />\r\n            <br />\r\n            {exportCSV && (\r\n              <ExportCSVButton {...props.csvProps}>\r\n                Export CSV!!\r\n              </ExportCSVButton>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </ToolkitProvider>\r\n  ) : props.empty ? (\r\n    <ToolkitProvider\r\n      keyField={props.keyField}\r\n      data={props.data || []}\r\n      columns={props.columns}\r\n      search\r\n    >\r\n      {(props) => (\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"text-left\">\r\n              <SearchBar {...props.searchProps} />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <div className=\"text-right\">\r\n              {tambahData && (\r\n                <button\r\n                  onClick={handleClick}\r\n                  className=\"btn btn-primary\"\r\n                  type=\"button\"\r\n                >\r\n                  Tambah Data\r\n                  <i className=\"fa fa-plus ml-3\"></i>\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"col-12\">\r\n            <BootstrapTable\r\n              pagination={paginationFactory()}\r\n              {...props.baseProps}\r\n              noDataIndication={<EmptyTable text={text || \"Tidak Ada Data\"} />}\r\n            />\r\n            <br />\r\n            {props.CSVExport && (\r\n              <ExportCSVButton {...props.csvProps}>\r\n                Export CSV!!\r\n              </ExportCSVButton>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </ToolkitProvider>\r\n  ) : (\r\n    <Skeleton width={\"100%\"} height={250} />\r\n  );\r\n}\r\n\r\nexport default Tabel;\r\n","module.exports = __webpack_public_path__ + \"static/media/empty.02c14787.svg\";","import React from \"react\";\r\nimport SelectSearch from \"react-select-search\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\n\r\nexport const ReanderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <input\r\n      onKeyPress={(event) => {\r\n        if (event.key === \"Enter\") {\r\n          event.preventDefault(); //<===== This stops the form from being submitted\r\n        } else {\r\n        }\r\n      }}\r\n      {...input}\r\n      autoComplete=\"off\"\r\n      type={type}\r\n      className=\"form-control\"\r\n      readOnly={readOnly}\r\n      placeholder={placeholder}\r\n    />\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\nexport const FormatNumber = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <NumberFormat\r\n      thousandSeparator={\".\"}\r\n      decimalSeparator={\",\"}\r\n      autoComplete=\"off\"\r\n      onKeyPress={(event) => {\r\n        if (event.key === \"Enter\") {\r\n          event.preventDefault(); //<===== This stops the form from being submitted\r\n        } else {\r\n        }\r\n      }}\r\n      {...input}\r\n      type={type}\r\n      inputmode=\"numeric\"\r\n      className=\"form-control\"\r\n      readOnly={readOnly}\r\n      placeholder={placeholder}\r\n    />\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nexport const Gramasi = ({\r\n  input,\r\n  label,\r\n  type,\r\n  readOnly,\r\n  placeholder,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <NumberFormat\r\n      format=\"#.###\"\r\n      autoComplete=\"off\"\r\n      thousandSeparator={\".\"}\r\n      // step={0.001}\r\n      decimalSeparator={\",\"}\r\n      onKeyPress={(event) => {\r\n        if (event.key === \"Enter\") {\r\n          event.preventDefault(); //<===== This stops the form from being submitted\r\n        } else {\r\n        }\r\n      }}\r\n      {...input}\r\n      type={type}\r\n      inputMode=\"numeric\"\r\n      className=\"form-control\"\r\n      readOnly={readOnly}\r\n      placeholder={placeholder}\r\n    />\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\n\r\n  \r\nexport const SkeletonLoading = ({\r\n  label,\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label> {label} </label>\r\n    <Skeleton className=\"form-control\" />\r\n  </div>\r\n);\r\n\r\nexport const ReanderSelect = ({\r\n  input,\r\n  label,\r\n  readOnly,\r\n  placeholder,\r\n  options,\r\n  value,\r\n  disabled,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <SelectSearch\r\n      autoComplete=\"off\"\r\n      onKeyPress={(event) => {\r\n        if (event.key === \"Enter\") {\r\n          event.preventDefault(); //<===== This stops the form from being submitted\r\n        } else {\r\n        }\r\n      }}\r\n      {...input}\r\n      readOnly={readOnly}\r\n      search\r\n      disabled={disabled}\r\n      placeholder={placeholder}\r\n      options={options}\r\n    />\r\n    {/* <Select\r\n        value={value}\r\n        readOnly={readOnly}\r\n        disabled={disabled}\r\n        placeholder={placeholder}\r\n        options={options}\r\n     \r\n      /> */}\r\n\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n\r\nexport const InputDate = ({\r\n  input,\r\n  label,\r\n  readOnly,\r\n  placeholder,\r\n  selected,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"\" className=\"text-black\">\r\n      {label}\r\n    </label>\r\n    <div className=\"customDatePickerWidth\">\r\n      <DatePicker\r\n        autoComplete=\"off\"\r\n        onKeyPress={(event) => {\r\n          if (event.key === \"Enter\") {\r\n            event.preventDefault(); //<===== This stops the form from being submitted\r\n          } else {\r\n          }\r\n        }}\r\n        {...input}\r\n        selected={selected}\r\n        className=\"form-control\"\r\n        readOnly={readOnly}\r\n        placeholder={placeholder}\r\n      />\r\n    </div>\r\n    {touched &&\r\n      ((error && (\r\n        <ul className=\"parsley-errors-list filled\">\r\n          <li className=\"parsley-required\"> {error}.</li>\r\n        </ul>\r\n      )) ||\r\n        (warning && <p>{warning}</p>))}\r\n  </div>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { createNumberMask } from \"redux-form-input-masks\";\r\nimport {\r\n  getBarang,\r\n  getKategoriService,\r\n} from \"../../../actions/datamaster_action\";\r\nimport { AxiosMasterGet } from \"../../../axios\";\r\nimport { ReanderField } from \"../../../components/helpers/field\";\r\nimport {\r\n  ReanderFieldInline,\r\n  ReanderSelect,\r\n  ToastError,\r\n} from \"../../../components/notification/notification\";\r\nconst currencyMask = createNumberMask({\r\n  prefix: \"Rp. \",\r\n  locale: \"id-ID\",\r\n});\r\n\r\nclass TambahService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listSupplier: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.dispatch(getKategoriService());\r\n    this.props.dispatch(getBarang());\r\n  }\r\n  setSparepart(e) {\r\n    let hasil = e.split(\"||\");\r\n    this.props.change(\"kode_supplier1\", null);\r\n    AxiosMasterGet(\"daftar-service/getDataBarangDaftarService/\" + hasil[3])\r\n      .then((res) =>\r\n        this.setState({\r\n          listSupplier: res && res.data[0].data_supplier,\r\n        })\r\n      )\r\n      .catch((err) => ToastError(`Error Get Supplier, ${err}`));\r\n    this.props.change(\"harga_sparepart\", hasil[1]);\r\n    this.props.change(\"kode_sparepart\", hasil[3]);\r\n    this.props.change(\"nama_sparepart\", hasil[2]);\r\n  }\r\n  setService(e) {\r\n    let hasil = e.split(\"||\");\r\n    this.props.change(\"kategori_service\", hasil[0]);\r\n    this.props.change(\"harga_service\", hasil[1]);\r\n    this.props.change(\"nama_service\", hasil[2]);\r\n  }\r\n  setBarang(e) {\r\n    this.props.change(\"stock\", e.split(\"||\")[1]);\r\n    this.props.change(\"kode_supplier\", e.split(\"||\")[0]);\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"col-lg-12\">\r\n                <Field\r\n                  name=\"kategori_service1\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listkategoriservice.map((list) => {\r\n                    let data = {\r\n                      value: `${list.kategori_service}||${list.harga_jasa_service}||${list.jenis_service}`,\r\n                      name: list.kategori_service,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  onChange={(e) => this.setService(e)}\r\n                  type=\"text\"\r\n                  label=\"Jenis Service\"\r\n                  placeholder=\"Masukan Jenis Service\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 d-none\">\r\n                <Field\r\n                  name=\"kategori_service\"\r\n                  component={ReanderFieldInline}\r\n                  type=\"text\"\r\n                  label=\"Harga Service\"\r\n                  placeholder=\"Masukan Harga Service\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 \">\r\n                <Field\r\n                  name=\"harga_service\"\r\n                  component={ReanderFieldInline}\r\n                  type=\"telp\"\r\n                  label=\"Harga Service\"\r\n                  placeholder=\"Masukan Harga Service\"\r\n                  {...currencyMask}\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 \">\r\n                <Field\r\n                  name=\"keterangan_service\"\r\n                  component={ReanderFieldInline}\r\n                  type=\"text\"\r\n                  label=\"Keterangan Service\"\r\n                  placeholder=\"Masukan Keterangan Service\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 d-none \">\r\n                <Field\r\n                  name=\"nama_service\"\r\n                  component={ReanderFieldInline}\r\n                  type=\"telp\"\r\n                  label=\"Harga Service\"\r\n                  placeholder=\"Masukan Harga Service\"\r\n                  {...currencyMask}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"col-lg-12\">\r\n                <Field\r\n                  name=\"sparepart\"\r\n                  component={ReanderSelect}\r\n                  options={this.props.listBarang.map((list) => {\r\n                    let data = {\r\n                      value: `${list.kode_barang}||${list.harga_jual}||${list.nama_barang}||${list.kode_barcode}`,\r\n                      name: list.nama_barang,\r\n                    };\r\n                    return data;\r\n                  })}\r\n                  onChange={(e) => this.setSparepart(e)}\r\n                  type=\"text\"\r\n                  label=\"Jenis Service\"\r\n                  placeholder=\"Masukan Jenis Service\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-6\">\r\n                    <Field\r\n                      name=\"kode_supplier1\"\r\n                      component={ReanderSelect}\r\n                      options={this.state.listSupplier.map((barang) => {\r\n                        let data = {\r\n                          value: `${barang.kode_supplier}||${barang.stock}`,\r\n                          name: barang.nama_supplier,\r\n                        };\r\n                        return data;\r\n                      })}\r\n                      onChange={(e) => this.setBarang(e)}\r\n                      type=\"text\"\r\n                      label=\"Kode Supplier\"\r\n                      placeholder=\"Masukan Kode Supplier\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-lg-6\">\r\n                    <Field\r\n                      name=\"stock\"\r\n                      component={ReanderField}\r\n                      type=\"text\"\r\n                      label=\"Stock\"\r\n                      placeholder=\"Masukan Kode Supplier\"\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-12 d-none\">\r\n                <Field\r\n                  name=\"kode_sparepart\"\r\n                  component={ReanderFieldInline}\r\n                  type=\"text\"\r\n                  label=\"Harga Service\"\r\n                  placeholder=\"Masukan Harga Service\"\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 d-none\">\r\n                <Field\r\n                  name=\"kode_supplier\"\r\n                  component={ReanderFieldInline}\r\n                  type=\"text\"\r\n                  label=\"Harga Service\"\r\n                  placeholder=\"Masukan Harga Service\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 d-none\">\r\n                <Field\r\n                  name=\"nama_sparepart\"\r\n                  component={ReanderFieldInline}\r\n                  type=\"text\"\r\n                  label=\"Harga Service\"\r\n                  placeholder=\"Masukan Harga Service\"\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12\">\r\n                <Field\r\n                  name=\"harga_sparepart\"\r\n                  component={ReanderFieldInline}\r\n                  type=\"telp\"\r\n                  label=\"Harga Service\"\r\n                  placeholder=\"Masukan Harga Service\"\r\n                  {...currencyMask}\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-12 \">\r\n                <Field\r\n                  name=\"keterangan_sparepart\"\r\n                  component={ReanderFieldInline}\r\n                  type=\"text\"\r\n                  label=\"Keterangan Sparepart\"\r\n                  placeholder=\"Masukan Keterangan Sparepart\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-12\">\r\n              <div className=\"text-right\">\r\n                <button className=\"btn btn-primary\">\r\n                  Submit <i className=\"fa fa-paper-plane ml-3\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nTambahService = reduxForm({\r\n  form: \"TambahService\",\r\n  enableReinitialize: true,\r\n})(TambahService);\r\nexport default connect((state) => {\r\n  return {\r\n    listBarang: state.datamaster.listbarang,\r\n    listkategoriservice: state.datamaster.listkategoriservice,\r\n  };\r\n})(TambahService);\r\n"],"sourceRoot":""}