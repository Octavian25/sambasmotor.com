{"version":3,"sources":["pages/Stoking/HancurBarang/HeadHancurBarang.jsx","pages/Stoking/HancurBarang/HancurBarang.jsx"],"names":["HeadHancurBarang","Component","constructor","props","super","this","state","listGudang","componentDidMount","AxiosMasterGet","then","res","change","data","no_hancur","dispatch","onProgress","setState","map","list","value","kode_lokasi_gudang","name","nama_lokasi_gudang","onFinish","render","react_default","a","createElement","onSubmit","handleSubmit","autoComplete","className","Field","component","ReanderField","type","label","placeholder","readOnly","ReanderSelect","options","onChange","e","localStorage","setItem","loading","onSend","Fragment","onClick","showModal","reduxForm","form","enableReinitialize","connect","datamaster","ModalHancurBarang","lazy","__webpack_require__","bind","hapusDataKategori","row","Swal","fire","title","text","icon","position","cancelButtonText","showCancelButton","confirmButtonText","showConfirmButton","result","isConfirmed","JSON","parse","getItem","data2","splice","stringify","NotifSucces","getHancurTemp","hancur_temp","stocking","React","isEdit","modalDialog","isLoading","columns","dataField","sort","csvExport","headerClasses","formatter","rowcontent","dataEdit","kode_barcode","nama_barang","merk","kwalitas","satuan","qty","harga_satuan","total","editModal","kodeProvinsi","hasil","supplier","kode_supplier","split","array","array_kirim","kondisi","data_kirim","push","hideModal","sendData","undefined","tanggal","lokasi","detail_barang","console","log","tableRows","forEach","i","rows","columnTabel","AxiosMasterPost","CetakNota","no_pindah","multipleDeleteLocal","reset","catch","err","NotifError","concat","react_router_dom","to","panel","HancurBarang_HeadHancurBarang","tabel","empty","keyField","CSVExport","textEmpty","ModalGlobal","content","react","fallback","lib_default","width","height","count"],"mappings":"kOAcA,MAAMA,UAAyBC,YAC7BC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CACXC,WAAY,IAGhBC,oBACEC,YAAe,iCAAiCC,KAAMC,GACpDN,KAAKF,MAAMS,OAAO,YAAaD,EAAIE,KAAK,GAAGC,YAE7CT,KAAKF,MAAMY,SAASC,gBACpBP,YAAe,yBACZC,KAAMC,GACLN,KAAKY,SAAS,CACZV,WACEI,GACAA,EAAIE,KAAKK,IAAKC,IAKZ,MAJW,CACTC,MAAOD,EAAKE,mBACZC,KAAMH,EAAKI,yBAMpBb,KAAK,IAAML,KAAKF,MAAMY,SAASS,iBAEpCC,SACE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,SAAUxB,KAAKF,MAAM2B,aAAcC,cAAc,GACrDL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEX,KAAK,YACLY,UAAWC,IACXC,KAAK,OACLC,MAAM,eACNC,YAAY,uBACZC,UAAQ,KAGZb,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEX,KAAK,UACLY,UAAWC,IACXC,KAAK,OACLC,MAAM,UACNC,YAAY,qBAGhBZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEX,KAAK,SACLY,UAAWM,IACXC,QAASpC,KAAKC,MAAMC,WACpB8B,MAAM,gBACNC,YAAY,sBACZI,SAAWC,GAAMC,aAAaC,QAAQ,gBAAiBF,GACvDG,QAASzC,KAAKF,MAAM4C,WAI1BrB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAAA,UAAQI,UAAU,mBACf3B,KAAKF,MAAM4C,OACVrB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,KACEtB,EAAAC,EAAAC,cAAA,KAAGI,UAAU,2BADf,0BAKAN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqB,SAAA,eACStB,EAAAC,EAAAC,cAAA,KAAGI,UAAU,gCAM9BN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,YACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,UACEQ,KAAK,SACLJ,UAAU,kBACViB,QAAS,IAAM5C,KAAKF,MAAMY,SAASmC,iBAHrC,iBAKgBxB,EAAAC,EAAAC,cAAA,KAAGI,UAAU,2BAU7ChC,EAAmBmD,YAAU,CAC3BC,KAAM,mBACNC,oBAAoB,GAFHF,CAGhBnD,GACYsD,kBAAShD,IACf,CACLyC,OAAQzC,EAAMiD,WAAWR,SAFdO,CAIZtD,6CC5FH,MAAMwD,EAAoBC,eAAK,IAAMC,EAAAf,EAAA,KAAAjC,KAAAgD,EAAAC,KAAA,aAO/BC,EAAoB,CAACC,EAAK9C,KAC9B+C,IAAKC,KAAK,CACRC,MAAO,gBACPC,KAAM,6BACNC,KAAM,UACNC,SAAU,aACVC,iBAAkB,QAClBC,kBAAkB,EAClBC,kBAAmB,KACnBC,mBAAmB,IAClB7D,KAAM8D,IACP,GAAIA,EAAOC,YAAa,CACtB,IAAI5D,EAAO6D,KAAKC,MAAM/B,aAAagC,QAAQ,sBACvCC,EAAQH,KAAKC,MAAM/B,aAAagC,QAAQ,4BAC5C/D,EAAKiE,OAAOjB,EAAK,GACjBgB,EAAMC,OAAOjB,EAAK,GAClBjB,aAAaC,QAAQ,oBAAqB6B,KAAKK,UAAUlE,IACzD+B,aAAaC,QAAQ,0BAA2B6B,KAAKK,UAAUF,IAC/DG,YAAY,2BACZjE,EAASkE,mBA8PA3B,sBAtRKhD,IACX,CACL4E,YAAa5E,EAAM6E,SAASD,cAoRG,KAApB5B,CA1Pf,cAA2B8B,IAAMnF,UAC/BC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CACX+E,QAAQ,EACRC,aAAa,EACbC,WAAW,EACXC,QAAS,CACP,CACEC,UAAW,eACXxB,KAAM,eACNyB,MAAM,GAER,CACED,UAAW,cACXxB,KAAM,eAER,CACEwB,UAAW,OACXxB,KAAM,QAER,CACEwB,UAAW,WACXxB,KAAM,YAER,CACEwB,UAAW,SACXxB,KAAM,UAER,CACEwB,UAAW,MACXxB,KAAM,OAER,CACEwB,UAAW,SACXxB,KAAM,SACN0B,WAAW,EACXC,cAAe,cACfC,UAAW,CAACC,EAAYjC,KACtB,IAAIkC,EAAW,CACbC,aAAcnC,EAAImC,aAClBC,YAAapC,EAAIoC,YACjBC,KAAMrC,EAAIqC,KACVC,SAAUtC,EAAIsC,SACdC,OAAQvC,EAAIuC,OACZC,IAAKxC,EAAIwC,IACTC,aAAczC,EAAIyC,aAClBC,MAAO1C,EAAI0C,OAGb,OADAlG,KAAKY,SAAS,IAEZS,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UACbN,EAAAC,EAAAC,cAAA,UACEqB,QAAS,IAAM5C,KAAKmG,UAAUT,GAC9B/D,UAAU,wBAFZ,OAKEN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,qBAEfN,EAAAC,EAAAC,cAAA,UACEqB,QAAS,IACPW,EAAkBC,EAAI4C,aAAcpG,KAAKF,MAAMY,UAEjDiB,UAAU,kBAJZ,QAOEN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,4BAW/BxB,oBACEH,KAAKF,MAAMY,SAASkE,eACpBxE,YAAe,iCAAiCC,KAAMC,GACpDiC,aAAaC,QAAQ,cAAelC,EAAIE,KAAK,GAAGC,YAGpDgB,aAAa4E,GACX,IAAIC,EAAWD,EAAME,eAAiBF,EAAME,cAAcC,MAAM,MAC5DC,EAAQpC,KAAKC,MAAM/B,aAAagC,QAAQ,uBAAyB,GACjEmC,EACFrC,KAAKC,MAAM/B,aAAagC,QAAQ,6BAA+B,GAC7D/D,EAAO,CACTmF,aAAcU,EAAMV,aACpBC,YAAaS,EAAMT,YACnBC,KAAMQ,EAAMR,KACZC,SAAUO,EAAMP,SAChBC,OAAQM,EAAMN,OACdQ,cAAeD,EAAS,GACxBN,IAAKK,EAAML,IACXW,QAASN,EAAMM,SAEbC,EAAa,CACfjB,aAAcU,EAAMV,aACpBY,cAAeD,EAAS,GACxBN,IAAKK,EAAML,IACXW,QAASN,EAAMM,SAGjBF,EAAMI,KAAKrG,GACXkG,EAAYG,KAAKD,GACjBrE,aAAaC,QAAQ,oBAAqB6B,KAAKK,UAAU+B,IACzDlE,aAAaC,QACX,0BACA6B,KAAKK,UAAUgC,IAEjB/B,YAAY,4BACTtE,KAAK,IAAML,KAAKF,MAAMY,SAASkE,gBAC/BvE,KAAK,IAAML,KAAKF,MAAMY,SAASoG,iBAEpCC,SAASV,GACPrG,KAAKF,MAAMY,SAASC,gBACpB,IAAIH,EAAO,CACTC,UAAW8B,aAAagC,QAAQ,qBAAkByC,EAClDC,QAASZ,EAAMY,QACfjG,mBAAoBqF,EAAMa,OAC1BC,cACE9C,KAAKC,MAAM/B,aAAagC,QAAQ,6BAA+B,IAEnE6C,QAAQC,IAAI7G,GAEZ,MAAM8G,EAAY,GACNjD,KAAKC,MAAM/B,aAAagC,QAAQ,sBACtCgD,QAAQ,CAAClB,EAAOmB,KACpB,MAAMC,EAAO,GACTD,EACFnB,EAAMV,aACNU,EAAMT,YACNS,EAAMR,KACNQ,EAAMP,SACNO,EAAMM,QACNN,EAAMN,OACNM,EAAML,KAERsB,EAAUT,KAAKY,KAEjB,IAAIC,EAAc,CAChB,KACA,UACA,cACA,OACA,KACA,UACA,SACA,OAGFC,YAAgB,+BAAgCnH,GAC7CH,KAAK,IACJuH,YACE,UACAvB,EAAMY,QACN,SACAZ,EAAMa,OACN,WACAb,EAAMwB,UACN,GACA,GACA,QACA,aACA,QACAH,EACA,oBACAJ,EACA,IACA,IAGHjH,KAAK,IAAMsE,YAAY,2BACvBtE,KAAK,IACJyH,YAAoB,CAClB,oBACA,0BACA,cACA,mBAGHzH,KAAK,IAAML,KAAKF,MAAMY,SAASqH,YAAM,sBACrC1H,KAAK,IAAML,KAAKF,MAAMY,SAASkE,gBAC/BvE,KAAK,IAAML,KAAKF,MAAMY,SAASS,iBAC/B6G,MAAOC,GACNC,YAAU,UAAAC,OAAWF,IAAO5H,KAAK,IAAML,KAAKF,MAAMY,SAASS,kBAGjEC,SACE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAII,UAAU,6BACZN,EAAAC,EAAAC,cAAA,MAAII,UAAU,mBACZN,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAMC,GAAG,KAAT,gBAEFhH,EAAAC,EAAAC,cAAA,MAAII,UAAU,0BAAd,kBAEFN,EAAAC,EAAAC,cAAA,MAAII,UAAU,eAAd,kBACAN,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,KACEjH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,sBACAjH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,KACEjH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACgH,EAAD,CAAkB/G,SAAWhB,GAASR,KAAK+G,SAASvG,MAItDa,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aACbN,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CACEC,OAAO,EACPC,SAAS,eACTlI,KAAMR,KAAKF,MAAM+E,aAAe,GAChCM,QAASnF,KAAKC,MAAMkF,QACpBwD,WAAS,EACTC,UAAU,+EAIdvH,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CACElF,MACE3D,KAAKC,MAAM+E,OACP,8BACA,qBAEN8D,QACEzH,EAAAC,EAAAC,cAACwH,EAAA,SAAD,CACEC,SAAU3H,EAAAC,EAAAC,cAAC0H,EAAA3H,EAAD,CAAU4H,MAAO,OAAQC,OAAQ,GAAIC,MAAO,KAEtD/H,EAAAC,EAAAC,cAAC4B,EAAD,CACE3B,SAAWhB,GAASR,KAAKyB,aAAajB,GACtCkC,OAAQ1C,KAAKF,MAAM4C,OACnBsC,OAAQhF,KAAKC,MAAM+E","file":"static/js/108.7db78070.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  onFinish,\r\n  onProgress,\r\n  showModal,\r\n} from \"../../../actions/datamaster_action\";\r\nimport { AxiosMasterGet } from \"../../../axios\";\r\nimport {\r\n  ReanderField,\r\n  ReanderSelect,\r\n} from \"../../../components/notification/notification\";\r\n\r\nclass HeadHancurBarang extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listGudang: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    AxiosMasterGet(\"hancur-barang/generate/no-trx\").then((res) =>\r\n      this.props.change(\"no_pindah\", res.data[0].no_hancur)\r\n    );\r\n    this.props.dispatch(onProgress());\r\n    AxiosMasterGet(\"lokasi-gudang/get/all\")\r\n      .then((res) =>\r\n        this.setState({\r\n          listGudang:\r\n            res &&\r\n            res.data.map((list) => {\r\n              let data = {\r\n                value: list.kode_lokasi_gudang,\r\n                name: list.nama_lokasi_gudang,\r\n              };\r\n              return data;\r\n            }),\r\n        })\r\n      )\r\n      .then(() => this.props.dispatch(onFinish()));\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.props.handleSubmit} autoComplete={true}>\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"no_pindah\"\r\n                component={ReanderField}\r\n                type=\"text\"\r\n                label=\"Nomor Pindah\"\r\n                placeholder=\"Masukan Nomor Pindah\"\r\n                readOnly\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"tanggal\"\r\n                component={ReanderField}\r\n                type=\"date\"\r\n                label=\"Tanggal\"\r\n                placeholder=\"Masukan Tanggal\"\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-3\">\r\n              <Field\r\n                name=\"lokasi\"\r\n                component={ReanderSelect}\r\n                options={this.state.listGudang}\r\n                label=\"Lokasi Gudang\"\r\n                placeholder=\"Pilih Lokasi Gudang\"\r\n                onChange={(e) => localStorage.setItem(\"lokasi_hancur\", e)}\r\n                loading={this.props.onSend}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"text-left\">\r\n                <button className=\"btn btn-primary\">\r\n                  {this.props.onSend ? (\r\n                    <>\r\n                      <i className=\"fas fa-spinner fa-spin\"></i> &nbsp; Sedang\r\n                      Menyimpan\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      Simpan <i className=\"fa fa-paper-plane ml-3 \"></i>\r\n                    </>\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"text-right\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning\"\r\n                  onClick={() => this.props.dispatch(showModal())}\r\n                >\r\n                  Tambah Barang <i className=\"fa fa-plus ml-3\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nHeadHancurBarang = reduxForm({\r\n  form: \"permintaanBarang\",\r\n  enableReinitialize: true,\r\n})(HeadHancurBarang);\r\nexport default connect((state) => {\r\n  return {\r\n    onSend: state.datamaster.onSend,\r\n  };\r\n})(HeadHancurBarang);\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport ModalGlobal from \"../../ModalGlobal.jsx\";\r\nimport {\r\n  NotifError,\r\n  NotifSucces,\r\n} from \"../../../components/notification/notification.jsx\";\r\nimport {\r\n  Panel,\r\n  PanelBody,\r\n  PanelHeader,\r\n} from \"../../../components/panel/panel.jsx\";\r\nimport HeadHancurBarang from \"./HeadHancurBarang.jsx\";\r\nimport {\r\n  hideModal,\r\n  onFinish,\r\n  onProgress,\r\n} from \"../../../actions/datamaster_action.jsx\";\r\nimport CetakNota from \"../CetakNota.jsx\";\r\nimport { getHancurTemp } from \"../../../actions/stocking_action.jsx\";\r\nimport { AxiosMasterGet, AxiosMasterPost } from \"../../../axios.js\";\r\nimport Tabel from \"../../../components/Tabel/tabel.jsx\";\r\nimport { multipleDeleteLocal } from \"../../../components/notification/function.jsx\";\r\nimport { reset } from \"redux-form\";\r\n\r\nconst ModalHancurBarang = lazy(() => import(\"./ModalHancurBarang.jsx\"));\r\n\r\nconst maptostate = (state) => {\r\n  return {\r\n    hancur_temp: state.stocking.hancur_temp,\r\n  };\r\n};\r\nconst hapusDataKategori = (row, dispatch) => {\r\n  Swal.fire({\r\n    title: \"Anda Yakin !!\",\r\n    text: \"Ingin Menghapus Data Ini ?\",\r\n    icon: \"warning\",\r\n    position: \"top-center\",\r\n    cancelButtonText: \"Tidak\",\r\n    showCancelButton: true,\r\n    confirmButtonText: \"OK\",\r\n    showConfirmButton: true,\r\n  }).then((result) => {\r\n    if (result.isConfirmed) {\r\n      let data = JSON.parse(localStorage.getItem(\"HancurBarang_temp\"));\r\n      let data2 = JSON.parse(localStorage.getItem(\"HancurBarang_temp_kirim\"));\r\n      data.splice(row, 1);\r\n      data2.splice(row, 1);\r\n      localStorage.setItem(\"HancurBarang_temp\", JSON.stringify(data));\r\n      localStorage.setItem(\"HancurBarang_temp_kirim\", JSON.stringify(data2));\r\n      NotifSucces(\"Berhasil Menghapus Data\");\r\n      dispatch(getHancurTemp());\r\n    }\r\n  });\r\n};\r\nclass HancurBarang extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false,\r\n      modalDialog: false,\r\n      isLoading: false,\r\n      columns: [\r\n        {\r\n          dataField: \"kode_barcode\",\r\n          text: \"Kode Barcode\",\r\n          sort: true,\r\n        },\r\n        {\r\n          dataField: \"nama_barang\",\r\n          text: \"Nama Barang\",\r\n        },\r\n        {\r\n          dataField: \"merk\",\r\n          text: \"Merk\",\r\n        },\r\n        {\r\n          dataField: \"kwalitas\",\r\n          text: \"Kualitas\",\r\n        },\r\n        {\r\n          dataField: \"satuan\",\r\n          text: \"Satuan\",\r\n        },\r\n        {\r\n          dataField: \"qty\",\r\n          text: \"Qty\",\r\n        },\r\n        {\r\n          dataField: \"action\",\r\n          text: \"Action\",\r\n          csvExport: false,\r\n          headerClasses: \"text-center\",\r\n          formatter: (rowcontent, row) => {\r\n            let dataEdit = {\r\n              kode_barcode: row.kode_barcode,\r\n              nama_barang: row.nama_barang,\r\n              merk: row.merk,\r\n              kwalitas: row.kwalitas,\r\n              satuan: row.satuan,\r\n              qty: row.qty,\r\n              harga_satuan: row.harga_satuan,\r\n              total: row.total,\r\n            };\r\n            this.setState({});\r\n            return (\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-12\">\r\n                  <button\r\n                    onClick={() => this.editModal(dataEdit)}\r\n                    className=\"btn btn-warning mr-3\"\r\n                  >\r\n                    Edit\r\n                    <i className=\"fa fa-edit ml-2\"></i>\r\n                  </button>\r\n                  <button\r\n                    onClick={() =>\r\n                      hapusDataKategori(row.kodeProvinsi, this.props.dispatch)\r\n                    }\r\n                    className=\"btn btn-danger\"\r\n                  >\r\n                    Hapus\r\n                    <i className=\"fa fa-trash ml-2\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getHancurTemp());\r\n    AxiosMasterGet(\"hancur-barang/generate/no-trx\").then((res) =>\r\n      localStorage.setItem(\"kode_hancur\", res.data[0].no_hancur)\r\n    );\r\n  }\r\n  handleSubmit(hasil) {\r\n    let supplier = hasil.kode_supplier && hasil.kode_supplier.split(\"||\");\r\n    let array = JSON.parse(localStorage.getItem(\"HancurBarang_temp\")) || [];\r\n    let array_kirim =\r\n      JSON.parse(localStorage.getItem(\"HancurBarang_temp_kirim\")) || [];\r\n    let data = {\r\n      kode_barcode: hasil.kode_barcode,\r\n      nama_barang: hasil.nama_barang,\r\n      merk: hasil.merk,\r\n      kwalitas: hasil.kwalitas,\r\n      satuan: hasil.satuan,\r\n      kode_supplier: supplier[0],\r\n      qty: hasil.qty,\r\n      kondisi: hasil.kondisi,\r\n    };\r\n    let data_kirim = {\r\n      kode_barcode: hasil.kode_barcode,\r\n      kode_supplier: supplier[0],\r\n      qty: hasil.qty,\r\n      kondisi: hasil.kondisi,\r\n    };\r\n\r\n    array.push(data);\r\n    array_kirim.push(data_kirim);\r\n    localStorage.setItem(\"HancurBarang_temp\", JSON.stringify(array));\r\n    localStorage.setItem(\r\n      \"HancurBarang_temp_kirim\",\r\n      JSON.stringify(array_kirim)\r\n    );\r\n    NotifSucces(\"Berhasil Menambahan Data\")\r\n      .then(() => this.props.dispatch(getHancurTemp()))\r\n      .then(() => this.props.dispatch(hideModal()));\r\n  }\r\n  sendData(hasil) {\r\n    this.props.dispatch(onProgress());\r\n    let data = {\r\n      no_hancur: localStorage.getItem(\"kode_hancur\") || undefined,\r\n      tanggal: hasil.tanggal,\r\n      kode_lokasi_gudang: hasil.lokasi,\r\n      detail_barang:\r\n        JSON.parse(localStorage.getItem(\"HancurBarang_temp_kirim\")) || [],\r\n    };\r\n    console.log(data);\r\n    // INISIALISASI AUTOTABLE\r\n    const tableRows = [];\r\n    let table = JSON.parse(localStorage.getItem(\"HancurBarang_temp\"));\r\n    table.forEach((hasil, i) => {\r\n      const rows = [\r\n        ++i,\r\n        hasil.kode_barcode,\r\n        hasil.nama_barang,\r\n        hasil.merk,\r\n        hasil.kwalitas,\r\n        hasil.kondisi,\r\n        hasil.satuan,\r\n        hasil.qty,\r\n      ];\r\n      tableRows.push(rows);\r\n    });\r\n    let columnTabel = [\r\n      \"NO\",\r\n      \"BARCODE\",\r\n      \"NAMA BARANG\",\r\n      \"MERK\",\r\n      \"KW\",\r\n      \"KONDISI\",\r\n      \"SATUAN\",\r\n      \"QTY\",\r\n    ];\r\n    // INISIALISASI SELESAI -> PANGGIL AXIOS DAN PANGGIL PRINT SAAT AXIOS BERHASIL\r\n    AxiosMasterPost(\"hancur-barang/post-transaksi\", data)\r\n      .then(() =>\r\n        CetakNota(\r\n          \"Tanggal\",\r\n          hasil.tanggal,\r\n          \"Lokasi\",\r\n          hasil.lokasi,\r\n          \"No Bukti\",\r\n          hasil.no_pindah,\r\n          \"\",\r\n          \"\",\r\n          \"ADMIN\",\r\n          \"01-28-2021\",\r\n          \"ADMIN\",\r\n          columnTabel,\r\n          \"BUKTI HANCUR STOK\",\r\n          tableRows,\r\n          [],\r\n          false\r\n        )\r\n      )\r\n      .then(() => NotifSucces(\"Berhasil Hancur Barang\"))\r\n      .then(() =>\r\n        multipleDeleteLocal([\r\n          \"HancurBarang_temp\",\r\n          \"HancurBarang_temp_kirim\",\r\n          \"kode_hancur\",\r\n          \"lokasi_hancur\",\r\n        ])\r\n      )\r\n      .then(() => this.props.dispatch(reset(\"permintaanBarang\")))\r\n      .then(() => this.props.dispatch(getHancurTemp()))\r\n      .then(() => this.props.dispatch(onFinish()))\r\n      .catch((err) =>\r\n        NotifError(`Error: ${err}`).then(() => this.props.dispatch(onFinish()))\r\n      );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Data Master</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Hancur Barang</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Hancur Barang </h1>\r\n        <Panel>\r\n          <PanelHeader>Hancur Barang</PanelHeader>\r\n          <PanelBody>\r\n            <br />\r\n            <div className=\"col-lg-12\">\r\n              <HeadHancurBarang onSubmit={(data) => this.sendData(data)} />\r\n            </div>\r\n            {/* Master Kategori */}\r\n\r\n            <div className=\"col-lg-12\">\r\n              <Tabel\r\n                empty={true}\r\n                keyField=\"kode_barcode\"\r\n                data={this.props.hancur_temp || []}\r\n                columns={this.state.columns}\r\n                CSVExport\r\n                textEmpty=\"Silahkan Piilih Lokasi Gudang dan Tekan Tombol Kuning Untuk Menambah Data\"\r\n              />\r\n            </div>\r\n\r\n            <br />\r\n            {/* End Master Kategori */}\r\n            <ModalGlobal\r\n              title={\r\n                this.state.isEdit\r\n                  ? \"Edit Data Permintaan Barang\"\r\n                  : \"Tambah Data Barang\"\r\n              }\r\n              content={\r\n                <Suspense\r\n                  fallback={<Skeleton width={\"100%\"} height={50} count={2} />}\r\n                >\r\n                  <ModalHancurBarang\r\n                    onSubmit={(data) => this.handleSubmit(data)}\r\n                    onSend={this.props.onSend}\r\n                    isEdit={this.state.isEdit}\r\n                  />\r\n                </Suspense>\r\n              }\r\n            />\r\n\r\n            {/* End Tambah Master Kategori  */}\r\n          </PanelBody>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(maptostate, null)(HancurBarang);\r\n"],"sourceRoot":""}