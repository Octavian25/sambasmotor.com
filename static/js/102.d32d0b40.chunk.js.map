{"version":3,"sources":["pages/Laporan/LaporanMedicalReport/TestCetak.jsx","pages/Laporan/LaporanMedicalReport/HeadLaporanMedicalReport.jsx","pages/Laporan/LaporanMedicalReport/LaporanMedicalReport.jsx"],"names":["Test","row1isi","row2isi","row3isi","doc","jsPDF","tableRows","footRows","finalY","total","setFontSize","text","no_terima","detail_barang","no","kode","bruto","persen","netto","pkg","gross","forEach","item","index","tableColumn","content","concat","colSpan","list","rows","parseFloat","harga_total","push","lastAutoTable","autoTable","head","body","foot","startY","theme","rowPageBreak","pageBreak","margin","top","bodyStyles","lineWidth","lineColor","fontSize","headStyles","fillColor","footStyles","embed","output","x","window","open","document","write","HeadLaporanMedicalReport","Component","constructor","props","super","this","state","render","react_default","a","createElement","className","Field","name","component","ReanderField","type","label","placeholder","onClick","reduxForm","form","enableReinitialize","connect","LaporanMedicalReport","react_router_dom","to","panel","LaporanMedicalReport_HeadLaporanMedicalReport"],"mappings":"wLAgNeA,MA3MF,CAACC,EAAU,GAAIC,EAAU,GAAIC,EAAU,MAElD,MAAMC,EAAM,IAAIC,UAAM,YAEtB,IA8DIC,EAAY,GACZC,EAAW,GACXC,EAAS,GACTC,EAAQ,EACZL,EAAIM,YAAY,IAChBN,EAAIO,KAAK,sBAAuB,GAAI,IACpCP,EAAIM,YAAY,GAEhBN,EAAIO,KAAJ,sCAAgD,GAAI,IACpDP,EAAIO,KAAJ,iBAA2B,GAAI,IAE/BP,EAAIO,KAAJ,eAAwB,GAAI,IAzEjB,CACT,CACEC,UAAW,OAIXC,cAAe,CACb,CACEC,GAAI,aACJC,KAAM,iBACNC,MAAO,EACPC,OAAQ,WACRC,MAAO,YACPC,IAAK,4BACLC,MAAO,SAMT,CACEN,GAAI,aACJC,KAAM,iBACNC,MAAO,EACPC,OAAQ,MACRC,MAAO,YACPC,IAAK,4BACLC,MAAO,eAMT,CACEN,GAAI,aACJC,KAAM,iBACNC,MAAO,EACPC,OAAQ,MACRC,MAAO,YACPC,IAAK,4BACLC,MAAO,UAkCVC,QAAQ,CAACC,EAAMC,KAClB,IAAIC,EAAc,CAChB,CACE,CACEC,QAAO,kBAAAC,OAAoBJ,EAAKV,WAChCe,QAAS,IAiBb,CACE,CACEF,QAAO,WAET,CACEA,QAAO,QAET,CACEA,QAAO,SAET,CACEA,QAAO,UAET,CACEA,QAAO,SAET,CACEA,QAAO,gBAET,CACEA,QAAO,kBAyBbH,EAAKT,cAAcQ,QAASO,IAC1B,IAAIC,EAAO,CACTD,EAAKd,GACLc,EAAKb,KACLa,EAAKZ,MACLY,EAAKX,OACLW,EAAKV,MACLU,EAAKT,IACLS,EAAKR,OAMPX,GAAgBqB,WAAWF,EAAKG,aAChCzB,EAAU0B,KAAKH,KAGjBtB,EAASyB,KADE,CAAC,YAAa,GAAI,GAAI,WAAY,GAAI,GAAI,GAAI,KAGzDxB,EAASJ,EAAI6B,cAAczB,OAAS,EACpCJ,EAAI8B,UAAU,CACZC,KAAMX,EACNY,KAAM9B,EACN+B,KAAM9B,EACN+B,OAAkB,IAAVf,EAAc,GAAKf,EAC3B+B,MAAO,QACPC,aAAc,QACdC,UAAW,QACXC,OAAQ,CAAEC,IAAK,IACfC,WAAY,CAAEC,UAAW,IAAMC,UAAW,OAAQC,SAAU,GAC5DC,WAAY,CACVH,UAAW,IACXC,UAAW,OACXG,UAAW,CAAC,IAAK,IAAK,KACtBF,SAAU,GAEZG,WAAY,CACVH,SAAU,KAGdzC,EAAY,GACZC,EAAW,KAKb,IACI4C,EAAQ,0CADC/C,EAAIgD,OAAO,iBACyC,MAC7DC,EAAIC,OAAOC,OACfF,EAAEG,SAASD,OACXF,EAAEG,SAASC,MAAMN,ICnMnB,MAAMO,UAAiCC,YACrCC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,GAEfC,SACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,KAAK,iBACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,eACNC,YAAY,0BAGhBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,KAAK,eACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,eACNC,YAAY,0BAGhBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,KAAK,gBACLC,UAAWC,IACXC,KAAK,OACLC,MAAM,iBACNC,YAAY,4BAGhBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,kBACVQ,QACE,IAAM7E,KAHV,cAaakE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAStCX,EAA2BoB,YAAU,CACnCC,KAAM,2BACNC,oBAAoB,GAFKF,CAGxBpB,GACYuB,oBAAUvB,GCtCVwB,UA1Bf,cAAmCvB,YACjCC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,GAEfC,SACE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,6BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACZH,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAG,KAAT,YAEFlB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAAd,2BAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,2BACAH,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,+BACAnB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACkB,EAAD","file":"static/js/102.d32d0b40.chunk.js","sourcesContent":["import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\n// Date Fns is used to format the dates we receive\r\n\r\n// define a generatePDF function that accepts a tickets argument\r\nconst Test = (row1isi = \"\", row2isi = \"\", row3isi = \"\") => {\r\n  // initialize jsPDF\r\n  const doc = new jsPDF(\"portrait\");\r\n  //   let data = JSON.parse(localStorage.getItem(\"tt_pengeluaran_barang\")) || [];\r\n  let data = [\r\n    {\r\n      no_terima: \"0.00\",\r\n      // tanggal: \"BAGONG-SEMARANG\",\r\n      // no_bon: \"20-02-2021\",\r\n      // supplier: \"FJ2001312-0032\",\r\n      detail_barang: [\r\n        {\r\n          no: \"13-02-2020\",\r\n          kode: \"PB-200213-0001\",\r\n          bruto: 0.0,\r\n          persen: \"1,048.54\",\r\n          netto: \"-1,048.54\",\r\n          pkg: \"PINDAH BRG PB-200213-0001\",\r\n          gross: \"WAHAB\",\r\n          // qty: 0,\r\n          // p: 2.044,\r\n          // k: 10,\r\n          // ongkos: 0,\r\n        },\r\n        {\r\n          no: \"13-02-2020\",\r\n          kode: \"PB-200213-0002\",\r\n          bruto: 0.0,\r\n          persen: \"200\",\r\n          netto: \"-1,248.54\",\r\n          pkg: \"PINDAH BRG PB-200213-0002\",\r\n          gross: \"SUMBER BARU\",\r\n          // qty: 0,\r\n          // p: 2.044,\r\n          // k: 10,\r\n          // ongkos: 0,\r\n        },\r\n        {\r\n          no: \"13-02-2020\",\r\n          kode: \"PB-200213-0004\",\r\n          bruto: 0.0,\r\n          persen: \"300\",\r\n          netto: \"-1,548.54\",\r\n          pkg: \"PINDAH BRG PB-200213-0004\",\r\n          gross: \"ABC\",\r\n          // qty: 0,\r\n          // p: 2.044,\r\n          // k: 10,\r\n          // ongkos: 0,\r\n        },\r\n        // {\r\n        //   no: 2,\r\n        //   kode: \"110PER110\",\r\n        //   bruto: 100,\r\n        //   persen: 110,\r\n        //   netto: 110,\r\n        //   pkg: 100,\r\n        //   gross: 200,\r\n        //   qty: 1,\r\n        //   p: 5,\r\n        //   k: 10,\r\n        //   ongkos: 0,\r\n        // },\r\n      ],\r\n    },\r\n  ];\r\n  let tableRows = [];\r\n  let footRows = [];\r\n  let finalY = 40;\r\n  let total = 0;\r\n  doc.setFontSize(18);\r\n  doc.text(\"LAPORAN KARTU STOCK\", 14, 15);\r\n  doc.setFontSize(8);\r\n  //row 1\r\n  doc.text(`TANGGAL : 01-01-2021 s/d 20-02-2021`, 14, 25);\r\n  doc.text(`LOKASI : PUSAT`, 14, 30);\r\n  //   row 2\r\n  doc.text(`JENIS\t: ARG`, 14, 35);\r\n  data.forEach((item, index) => {\r\n    let tableColumn = [\r\n      [\r\n        {\r\n          content: `SALDO AWAL \\t: ${item.no_terima}`,\r\n          colSpan: 7,\r\n        },\r\n        // {\r\n        //   content: `NAMA TOKO \\t: ${item.tanggal}`,\r\n        //   colSpan: 3,\r\n        // },\r\n      ],\r\n      // [\r\n      //   {\r\n      //     content: `TANGGAL BAYAR\\t: ${item.no_bon}`,\r\n      //     colSpan: 3,\r\n      //   },\r\n      //   // {\r\n      //   //   content: `NO.BON\\t: ${item.supplier}`,\r\n      //   //   colSpan: 3,\r\n      //   // },\r\n      // ],\r\n      [\r\n        {\r\n          content: `TANGGAL`,\r\n        },\r\n        {\r\n          content: `REFF`,\r\n        },\r\n        {\r\n          content: `MASUK`,\r\n        },\r\n        {\r\n          content: `KELUAR`,\r\n        },\r\n        {\r\n          content: `SALDO`,\r\n        },\r\n        {\r\n          content: `KETERANGAN 1`,\r\n        },\r\n        {\r\n          content: `KETERANGAN 1`,\r\n        },\r\n        // {\r\n        //   content: `SELISIH`,\r\n        // },\r\n        // {\r\n        //   content: `NETT(Gr)`,\r\n        // },\r\n        // {\r\n        //   content: `Gross(Gr)`,\r\n        // },\r\n        // {\r\n        //   content: `Qty`,\r\n        // },\r\n        // {\r\n        //   content: `P`,\r\n        // },\r\n        // {\r\n        //   content: `K`,\r\n        // },\r\n        // {\r\n        //   content: `Ongkos(Rp)`,\r\n        // },\r\n      ],\r\n    ];\r\n    item.detail_barang.forEach((list) => {\r\n      let rows = [\r\n        list.no,\r\n        list.kode,\r\n        list.bruto,\r\n        list.persen,\r\n        list.netto,\r\n        list.pkg,\r\n        list.gross,\r\n        // list.qty,\r\n        // list.p,\r\n        // list.k,\r\n        // list.ongkos,\r\n      ];\r\n      total = total + parseFloat(list.harga_total);\r\n      tableRows.push(rows);\r\n    });\r\n    let foot = [\"SUB TOTAL\", \"\", \"\", \"1,548.54\", \"\", \"\", \"\", \"\"];\r\n    footRows.push(foot);\r\n\r\n    finalY = doc.lastAutoTable.finalY + 2;\r\n    doc.autoTable({\r\n      head: tableColumn,\r\n      body: tableRows,\r\n      foot: footRows,\r\n      startY: index === 0 ? 40 : finalY,\r\n      theme: \"plain\",\r\n      rowPageBreak: \"avoid\",\r\n      pageBreak: \"avoid\",\r\n      margin: { top: 20 },\r\n      bodyStyles: { lineWidth: 0.02, lineColor: \"#000\", fontSize: 8 },\r\n      headStyles: {\r\n        lineWidth: 0.02,\r\n        lineColor: \"#000\",\r\n        fillColor: [187, 187, 187],\r\n        fontSize: 8,\r\n      },\r\n      footStyles: {\r\n        fontSize: 8,\r\n      },\r\n    });\r\n    tableRows = [];\r\n    footRows = [];\r\n  });\r\n\r\n  // doc.autoPrint();\r\n  // doc.save(`${title}_${dateStr}.pdf`);\r\n  var string = doc.output(\"datauristring\");\r\n  var embed = \"<embed width='100%' height='100%' src='\" + string + \"'/>\";\r\n  var x = window.open();\r\n  x.document.open();\r\n  x.document.write(embed);\r\n  // x.document.close();\r\n  // setInterval(() => {\r\n  //   x.close();\r\n  // }, 1000);\r\n};\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { ReanderField } from \"../../../components/notification/notification\";\r\nimport Test from \"./TestCetak\";\r\n\r\nclass HeadLaporanMedicalReport extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-3\">\r\n          <Field\r\n            name=\"nopol_kendaran\"\r\n            component={ReanderField}\r\n            type=\"text\"\r\n            label=\"Nomor Polisi\"\r\n            placeholder=\"Masukan Nomor Polisi\"\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-3\">\r\n          <Field\r\n            name=\"tanggal_awal\"\r\n            component={ReanderField}\r\n            type=\"date\"\r\n            label=\"Dari Tanggal\"\r\n            placeholder=\"Masukan Tanggal Awal\"\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-3\">\r\n          <Field\r\n            name=\"tanggal_akhir\"\r\n            component={ReanderField}\r\n            type=\"date\"\r\n            label=\"Sampai Tanggal\"\r\n            placeholder=\"Masukan Sampai Tanggal\"\r\n          />\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          <div className=\"text-right\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={\r\n                () => Test()\r\n                // CetakMedicalReport(\r\n                //   \"5 Februari 2021\",\r\n                //   \"D4083AAP\",\r\n                //   \"ADMIN\",\r\n                //   \"5 FEBRUARI 2021\",\r\n                //   \"ADMIN\"\r\n                // )\r\n              }\r\n            >\r\n              Lihat Data <i className=\"fa fa-print ml-3\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeadLaporanMedicalReport = reduxForm({\r\n  form: \"HeadLaporanMedicalReport\",\r\n  enableReinitialize: true,\r\n})(HeadLaporanMedicalReport);\r\nexport default connect()(HeadLaporanMedicalReport);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Panel, PanelBody, PanelHeader } from \"../../../components/panel/panel\";\r\nimport HeadLaporanMedicalReport from \"./HeadLaporanMedicalReport\";\r\n\r\nclass LaporanMedicalReport extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ol className=\"breadcrumb float-xl-right\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"#\">Laporan</Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\">Laporan Medical Report</li>\r\n        </ol>\r\n        <h1 className=\"page-header\">Laporan Medical Report </h1>\r\n        <Panel>\r\n          <PanelHeader>Laporan Medical Report</PanelHeader>\r\n          <PanelBody>\r\n            <HeadLaporanMedicalReport />\r\n          </PanelBody>\r\n        </Panel>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LaporanMedicalReport;\r\n"],"sourceRoot":""}